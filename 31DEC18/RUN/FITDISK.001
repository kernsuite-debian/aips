$ FITDISK
$---------------------------------------------------------------
$! Procedures for easy-to-learn VLBA data reduction
$# RUN POPS FITS UV IMAGE-UTIL
$-----------------------------------------------------------------------
$;  Copyright (C) 2001-2002, 2008
$;  Associated Universities, Inc. Washington DC, USA.
$;
$;  This program is free software; you can redistribute it/or
$;  and/or modify it under the terms of the GNU General Public
$;  License as published by the Free Software Foundation; either
$;  version 2 of the License, or (at your option) any later
$;  version.
$;
$;  This program is distributed in the hope that it will be
$;  useful, but WITHOUT ANY WARRANTY; without even the implied
$;  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
$;  PURPOSE.  See the GNU General Public License for more
$;  details.
$;
$;  You should have received a copy of the GNU General Public
$;  License along with this program; if not, write to the Free
$;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
$;  MA 02139, USA.
$;
$;  Correspondence concerning AIPS should be addressed as
$;  follows:
$;         Internet email: aipsmail@nrao.edu.
$;         Postal address: AIPS Project Office
$;                         National Radio Astronomy Observatory
$;                         520 Edgemont Road
$;                         Charlottesville, VA 22903-2475 USA
$-----------------------------------------------------------------------
*
PROCEDURE FITDISK
*-----------------------------------------------------------------------
*    Write files to disk using (with FITTP) an automatically g
*    enerated name based on the AIPS file name.
*
* Inputs:
*   INNAME      input file name
*   INCLASS     input file class
*   INSEQ       input file sequence number
*   INDISK      input file disk number
*   DATAOUT     logical name for output directory
*   DOSTOKES    FITTP input
*   DONEWTAB    FITTP input
*   FORMAT      FITTP input
*   BLOCKING    FITTP input
*
*-----------------------------------------------------------------------
scalar jinna, jincl, jout, oldwait, inp_ok
*
tput fitdisk
oldwait=dowait
dowait=1
inp_ok=1
if substr(dataout,1,1) = ' ' then
  inp_ok=-1
  type 'DATAOUT must be set to a logical directory name'
  type 'reset DATAOUT and run again'
end
if inp_ok > 0 then
  task 'fittp'; default; tget 'fitdisk'; task 'fittp'
  outna=inname; outcl=inclass; outseq=inseq
  jinna=length(inname)
  for j=jinna to 1 by -1
     if substr(inname,j,j)=' ' then
           substr(inname,j,j)='_'
     end
  end
  jincl=length(inclass)
  for j=jincl to 1 by -1
     if substr(inclass,j,j)=' ' then
           substr(inclass,j,j)='_'
     end
  end
  jout=length(dataout)
  dataout=substr(dataout,1,jout)!!':'!!substr(inname,1,jinna)!!'.'
  jout=length(dataout)
  dataout=substr(dataout,1,jout)!!substr(inclass,1,jincl)!!'.'
  jout=length(dataout)
  dataout=substr(dataout,1,jout)!!char(inseq)
  inna=outname; incl=outclass; inseq=outseq
  go fittp
end
dowait=oldwait; tget fitdisk;clrtemp
return; finish
