; BPASSPRM
;---------------------------------------------------------------
;! Control adverb array for bandpass calibration
;# ADVERB UV CALIBRATION SPECTRAL
;-----------------------------------------------------------------------
;;  Copyright (C) 2004, 2014
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning AIPS should be addressed as follows:
;;         Internet email: aipsmail@nrao.edu.
;;         Postal address: AIPS Project Office
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
;---------------------------------------------------------------
BPASSPRM  LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
----------------------------------------------------------------
BPASSPRM
Type: Adverb (Array(11))
Use:  Bandpass calibration control parameter array.
Tasks:
  BPASS.....Computes spectral bandpass correction table
  CPASS.....Computes polynomial spectral bandpass correction table
            BPASSPRM use - see task helps for details
            (1) if > 0 use only the autocorrelation data.
            (2) print level.
            (3) If > 0 do not divide data by source model
            (4) If > 0 store phases only in the BP table.
            (5) Divide by 'channel 0' control:
                  0 -> divide by channel 0 amp and phase each time
                 -1 -> divide by channel 0 phase only each time
                  1 -> do no division by channel 0 at each time
            (6) amp closure error limit - print channels averaging
                over this if (2) > 0
            (7) phase closure error limit print channels averaging
                over this if (2) > 0
            (8) > 0 => scalar average amplitudes
            (9) > 0 => interpolate over flagged channels if poss.
            (10) 0 => no deliberate normalization after solutions
                      found.
                 1 => normalize amplitudes using all channels
                 2 => normalize amplitudes using ICHANSEL channels
                 3 => normalize amplitudes and zero average phase
                      using ICHANSEL channels
                 4 => normalize amplitudes and zero average phase
                      using all channels
                 5 => normalize amplitudes and zero average phase
                      using ICHANSEL channels - normalizes power
                      (square of BP function) not function itself
                 6 => normalize amplitudes and zero average phase
                      using all channels - normalizes power (square of
                      BP function) not function itself
             (11) > 0 solution weights are independent of channel
                  <=0, > -1.5 weights scaled by amplitude**2
                  < -1.5 weights scaled by 1 / amplitude**2
----------------------------------------------------------------
