; SPFIX
;---------------------------------------------------------------
;! Makes cube from input to and output from SPIXR spectral index
;# TASK IMAGING ANALYSIS
;-----------------------------------------------------------------------
;;  Copyright (C) 2018
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning AIPS should be addressed as follows:
;;         Internet email: aipsmail@nrao.edu.
;;         Postal address: AIPS Project Office
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
SPFIX     LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
SPFIX      Makes cube from input to and output from SPIXR
INNAME                             Input image name (name)
INCLASS                            Input image name (class)
INSEQ             0.0     9999.0   Input image name (seq. #)
INDISK            0.0        9.0   Input image disk unit #
BLC               0.0              Bottom left corner
TRC               0.0              Top right corner
IN2NAME                            Input image T(f0), S, C
IN2SEQ             0.0     9999.0  Input image name (seq. #)
IN2DISK            0.0        9.0  Input image disk unit #
OUTNAME                            Output image name (name)
OUTCLASS                           Output image name (class)
OUTSEQ           -1.0     9999.0   Output image name (seq. #)
OUTDISK           0.0        9.0   Output image disk unit #.
OPTYPE                             'CURV' incl curvature image
OPCODE                             'DIFF' write Data-Model
----------------------------------------------------------------
SPFIX
Task:  Uses the input cube to SPIXR to define the frequencies of the
       output cube and uses the output images from SPIXR of classes
       'B TEMP', 'SPIX', nad optionally 'SPCU' to compute what is
       essentially a model cube.  The function used is
            log(T(x,y,f)) = log(T(x,y,f0)) + S(x,y) log(f/f0) +
                  C(x,y) (log(f/f0))^2
       where the logarithms are base 10 and f0 is the specified
       reference frequency found in the headers of the IN2NAME images.
Adverbs:
  INNAME.....Input image name (name).     Standard defaults.
             The image input to SPIXR with the frequency axis as the
             first axis.
  INCLASS....Input image name (class).    Standard defaults.
  INSEQ......Input image name (seq. #).   0 => highest.
  INDISK.....Disk drive # of input image. 0 => any.
  BLC........Bottom left corner
  TRC........Top right corner: Only BLC(1) and TRC(1) are used to set
             the range of spectral channels.  Use the same as you did
             for SPIXR.
  IN2NAME....Input image output by SPIXR (name)
             The IN2CLASS values used are 'B TEMP', 'SPIX', and 'SPCU'
  IN2SEQ.....Input image output by SPIXR (seq. #).
  IN2DISK....Disk drive # of images output by SPIXR.
  OUTNAME....Output image name (name).    Standard defaults.
  OUTCLASS...Output image name (class).   ' ' -> 'SPFIX'
  OUTSEQ.....Output image name (seq. #). 0 => highest unique.
  OUTDISK....Disk drive # of output image.  0 => highest
             number with sufficient space.
  OPTYPE.....'CURV' => use a curvature image as well as spectral
             index.
             anything else => use only 'B TEMP' and 'SPIX' images
  OPCODE.....'DIFF' => write data - model instead of Model.
             else   => write the Model.
----------------------------------------------------------------
