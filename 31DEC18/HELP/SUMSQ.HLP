; SUMSQ
;---------------------------------------------------------------
;! Task to sum the squared pixel values of overlapping,
;# TASK ANALYSIS
;-----------------------------------------------------------------------
;;  Copyright (C) 1995, 2009
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning AIPS should be addressed as follows:
;;         Internet email: aipsmail@nrao.edu.
;;         Postal address: AIPS Project Office
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
SUMSQ     LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
SUMSQ     Task to sum the squared pixel values of overlapping,
          sequentially-numbered images.
INNAME                             First image name (name)
INCLASS                            First image name (class)
INSEQ           1.0      9999.0    First image name (seq. #)
IN2SEQ          1.0       999.0    Final seq # in image set
IN3SEQ          1.0      9999.0    Change of seq # between incl.
INDISK                             Image set disk unit #
OUTNAME                            Output image name (name)
OUTCLASS                           Output image name (class)
OUTSEQ         -1.0      9999.0    Output image name (seq #)
                                     0 => highest unique
OUTDISK                            Output image disk unit #
BLC             0.0      2048.0    Bottom left corner 0 => 1
TRC             0.0      2048.0    Top right corner 0 => max
FACTOR                             Multiplicative scale factor,
                                   0=> 1/(# of input images)
DPARM                              If DPARM(1)>0 and FACTOR is
                                   greater than or equal to 0
                                   then  SQUARE ROOT [(scale
                                   factor)*(sum of squares)]
                                   is computed.
BADDISK                            Disks to avoid for scratch.
----------------------------------------------------------------
SUMSQ
Type: Task
Use:  SUMSQ sums the squared pixel values of a number of maps
      to form its output map.  SUMSQ, in combination with SUMIM
      and COMB, can be used to produce the average of a set of
      maps, along with the rms of the average.  The set of maps
      must all have the same INNAME and INCLASS and the INSEQ
      must be equally spaced.
Adverbs:
  INNAME......Name of first image(name).      Standard defaults.
  INCLASS.....Name of first image(class).     Standard defaults.
  INSEQ.......Name of first image(seq. #).    0 => highest.
  IN2SEQ......Final seq. # for image set.     No defaults.
  IN3SEQ......Change of seq # for set of images.  0 => 1.
              Thus, a DO LOOP over the seq. # is formed
                DO I = INSEQ, IN2SEQ, IN3SEQ
  INDISK......Disk drive # of all input images.  0 => any.
  OUTNAME.....Name of output image(name).    Standard defaults.
  OUTCLASS....Name of output image(class).   Standard defaults.
  OUTSEQ......Name of output image(seq. #).  0 => highest unique
  OUTDISK.....Disk drive # for output image. 0 => highest with
              space
  BLC.........Bottom left corner all input images
  TRC.........Top right corner all input images
  FACTOR.....Factor by which to multiply each squared map before
              adding. If FACTOR .EQ. 0.0  a factor of
              1/(# number of maps) will be used.
  DPARM(1)....If DPARM(1)>0 and FACTOR is greater than or equal
              to 0, then SQUARE ROOT [(scale factor)*(sum of
              squares)] is computed.
  BADDISK.....Disk(s) to avoid for the scratch files.
----------------------------------------------------------------
