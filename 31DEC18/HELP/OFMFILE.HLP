; OFMFILE
;---------------------------------------------------------------
;! specifies the name of a text file containing OFM values
;# ADVERB TV PLOT
;-----------------------------------------------------------------------
;;  Copyright (C) 1995, 2002
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning AIPS should be addressed as follows:
;;         Internet email: aipsmail@nrao.edu.
;;         Postal address: AIPS Project Office
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
OFMFILE   LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
----------------------------------------------------------------
OFMFILE
Type:     Adverb   (String*48)
Use:      The color look-up tables applied to the images shown on the
          TV may be saved in text files usually stored in an area
          known by the logical name OFMFIL.  These files are in ASCII
          and have one record per input value in the form:
                      IIII : BBBBB GGGGG RRRRR
          where IIII is the input intensity, BBBBB is the blue output
          intensity, GGGGG is the green output intensity, and RRRRR is
          the red output intensity.  The range 0 to 10000 is scaled to
          0.0 to 1.0 for loading to the TV.  You must retain this
          format exactly and have one record for each input value in
          order of increasing input intensity.  These files may be
          edited by your favorite text editor.  Their name is
          <name>.uuu, where <name> is a 1-8 character name of your
          choice (in upper case) and .uuu is your user number in
          extended hexadecimal (base 36, with leading 0's as needed to
          make 3 characters).

          The standard AIPS OFMs are kept in an area with the
          pre-defined logical name AIPSOFM.  Use OFMDIR for a
          list of these files.

          You may also keep OFM files in any area of your choosing.
          In that case, specify
                     OFMFILE = '<logical>:<fullname>',
          where <logical> is the logical name of your area (usually in
          upper case) and the colon is required and implies this
          usage.  The full file name including any extension must be
          given in this case.  Note that the Unix-standard $ ahead of
          the logical is omitted.  Other forms are now acceptable as
          well (except in OFMGET which requires a logical)
             OFMFILE = 'MyOFM
          will find the file in the logical directories AIPSOFM or
          OFMFIL.  A full path name may also be given
             OFMFILE = '/home/primate2/egreisen/AIPS/Text.ofm
          if it fits in 48 characters.  Note that the trailing quote
          mark is left off and this is the last command on the input
          line so that the case is preserved.

          All verbs which use this adverb are also capable of taking
          an immediate argument which will override the adverb value.
          For examples,
                   OFMZAP  'MYAREA:LOUSY.OFM'
                   OFMGET  'COLWED8'
          Note that the apostrophies are required.
Verbs:
  OFMGET......Load the specified OFM file to the TV OFM.
  OFMSAVE.....Create a new OFM file of the specified name and
              fill it with the current OFM.
  OFMZAP......Delete the specified OFM file.
Tasks:
  GREYS.......Make a grey-scale plot scaled with the OFM.  Contours
              may also be drawn.
  PCNTR.......Make a grey-scale plot scaled with the OFM.  Contours
              and polarization vectors are also drawn.
  LWPLA.......Convert a plot file to PostScript for saving and/or
              printing.  The OFM is used to convert grey scales.
  KNTR........Make a grey-scale plot scaled with the OFM.  Contours
              and polarization vectors can also be drawn.
----------------------------------------------------------------
The AIPSOFM files provided are

Black & white ones:

BLACK      Just as it says - all 0 or black
EYEBW      The eye perceives this as linear
FOTOBW     Actually linear
GREY01W    1 step wedge
GREY02W    2 step wedges
GREY04A    4 discreet levels.
GREY04B    8 discreet levels, alternating brighter and darker.
GREY04C    16 discreet levels in sets of 4, increasing between sets,
           decreasing within each set
GREY04D    32 discreet levels in sets of 8, increasing between sets,
           decreasing within each set
GREY04W    4 step wedges.
GREY08A    8 discreet levels.
GREY08B    16 discreet levels, alternating brighter and darker.
GREY08C    32 discreet levels in sets of 4, increasing between sets,
           decreasing within each set
GREY08W    8 step wedges.
GREY16A    16 discreet levels.
GREY16B    32 discreet levels, alternating brighter and darker.
GREY16W    16 step wedges.
GREY32A    32 discreet levels
GREY32W    32 step wedges.
GREY64W    64 step wedges.
GREY128W   Many discreet levels alternating brighter and darker, both
           getting brighter as the level increases
GREY256    Continuous single wedge.
GREYLOGA   4 discreet steps increasing logarithmicly
GREYLOGB   4 discreet steps increasing logarithmicly
GREYLOGC   4 discreet steps increasing logarithmicly
GREYLOGD   4 discreet steps increasing logarithmicly
WHITE      All white
ZERO       See BLACK

Color ones

COLOUR16   16 blended steps of color also getting brighter
COLOUR8    8 blended steps of color all fairly bright
COLWED16   16 step wedges in different colors
COLWED8    8 step wedges in different colors
DEMO3      Similar to the previous in fewer steps
COMB2152   Blue, greens, purple, reds, yellow, white in blended steps
ROB1       Like COMB2152 with varying levels at which steps come in.
ROB2       Like COMB2152 with varying levels at which steps come in.
ROB3       Like COMB2152 with varying levels at which steps come in.
ROB4       Like COMB2152 with varying levels at which steps come in.
RAINBOW    Smooth rainbow of colors from blue to red

STEP8      8 steps of color - basic AIPS TVFIDDLE set
STEPS8     8 steps of color - TVPSEUDO button C 3 times
STEP10     10 steps of color - TVPSEUDO button C 2 times
STEP64     64 steps of color in a rainbow - TVPSEUDO button C 4 times

RYPHLAME   Red -> yellow -> white flame       1st color of TVPHLAME
GCPHLAME   Green -> cyan -> white flame       2nd color of TVPHLAME
BPPHLAME   Blue -> purple -> white flame      3rd color of TVPHLAME
BPHLAME    Dark -> light blue -> white flame  4th color of TVPHLAME
GYPHLAME   Green -> yellow -> white flame     5th color of TVPHLAME
RPPHLAME   Red -> purple -> white flame       6th color of TVPHLAME
----------------------------------------------------------------
