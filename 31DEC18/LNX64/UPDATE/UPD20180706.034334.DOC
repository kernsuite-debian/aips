rishi update report for 31DEC18 on Fri Jul  6 03:43:43 UTC 2018 (UT)

Copies and compiles:

AIPSUPD - NOTE: if NFS copying fails, will NOT use SECURE SHELL.
UPDCOPYSUB: Copied /home/AIPS/31DEC18/LINUX/UPDATE/LASTGOOD.DAT
UPDCOPYSUB: to     rishi:/home/AIPS/31DEC18/LNX64/UPDATE/LASTGOOD.DAT.dave
UPDCOPYSUB: Copied /home/AIPS/31DEC18/LINUX/UPDATE/COMRPL.UPD
UPDCOPYSUB: to     rishi:COMRPL.UPD
UPDCOPYSUB: Copied /home/AIPS/31DEC18/LINUX/UPDATE/COMRPL.UPD.SUM
UPDCOPYSUB: to     rishi:COMRPL.UPD.SUM
UPDCOPYSUB: Copied /home/AIPS/31DEC18/LINUX/UPDATE/COMLNK.UPD
UPDCOPYSUB: to     rishi:COMLNK.UPD
UPDCOPYSUB: Copied /home/AIPS/31DEC18/LINUX/UPDATE/COMLNK.UPD.SUM
UPDCOPYSUB: to     rishi:COMLNK.UPD.SUM
UPDCOPYSUB: Copied /home/AIPS/31DEC18/LINUX/UPDATE/PUTBCK.UPD
UPDCOPYSUB: to     rishi:PUTBCK.UPD
UPDCOPYSUB: Copied /home/AIPS/31DEC18/LINUX/UPDATE/PUTBCK.UPD.SUM
UPDCOPYSUB: to     rishi:PUTBCK.UPD.SUM
UPDCOPYSUB: Copied /home/AIPS/31DEC18/LINUX/UPDATE/REASONS.UPD
UPDCOPYSUB: to     rishi:REASONS.UPD
UPDCOPYSUB: Copied /home/AIPS/31DEC18/LINUX/UPDATE/REASONS.UPD.SUM
UPDCOPYSUB: to     rishi:REASONS.UPD.SUM
UPDCOPYSUB: Copied /home/AIPS/31DEC18/LINUX/UPDATE/REMOVE.UPD
UPDCOPYSUB: to     rishi:REMOVE.UPD
UPDCOPYSUB: Copied /home/AIPS/31DEC18/LINUX/UPDATE/REMOVE.UPD.SUM
UPDCOPYSUB: to     rishi:REMOVE.UPD.SUM

UPDCONTROL - /home/AIPS/31DEC18/LNX64/UPDATE/LASTREMOVE.DAT = 20180705.034216
UPDCONTROL - /home/AIPS/31DEC18/LNX64/UPDATE/LASTCOPY.DAT = 20180705.034216
UPDCONTROL - /home/AIPS/31DEC18/LNX64/UPDATE/LASTCOMRPL.DAT = 20180705.034216
UPDCONTROL - /home/AIPS/31DEC18/LNX64/UPDATE/LASTCOMLNK.DAT = 20180705.034216

UPDCONTROL - Everything seems in order

UPDCOMRPL: COMRPLs


UPDCOMRPL: currently in /home/AIPS/31DEC18/LNX64/UPDATE

UPDCOMLNK: COMLNKs

05-JUL-2018 23:10:30 20180705 TST QPGNOT   FRING.FOR     egreisen

UPDCOMLNK: currently in /home/AIPS/31DEC18/LNX64/UPDATE
UPDCOMLNK: /home/AIPS/31DEC18/Q/PGM/NOTST/FRING.FOR


UPDCONTROL - Reasons for file updates on Fri Jul  6 03:43:35 UTC 2018 (UT)

05-JUL-2018 23:10:07 20180705 TST QPGNOT   FRING.FOR     allow arbitrary IF groupings
05-JUL-2018 23:10:08 20180705 TST HLPFIL   FRING.HLP     allow arbitrary IF groupings
05-JUL-2018 23:11:28 20180705 TST HIST     CHANGE.DOC    fring

CHANGE.DOC entries:

15199.  July 5, 2018             FRING                 Eric
        Added another APARM(5) option indicated by a value < 0.
        In that case, a new adverb BPARM is used to give the end IF
        numbers of the groups of IFs which are solved.  Thus
        BPARM = 3, 7, 16 would solve for 3 delays, one in IFs 1-3, one
        in IFs 4-7, and one in IFs 8-16.  This option is helpful given
        the variety of options now offered by the Widar correlator.
        Also discovered that certain math conditions could cause the
        task to produce rates even when DPARM(9) > 0.  Added flagging
        of rates in the main routine (FRNDRP) that computes them and
        corrected existing code for such flagging.  The old code ended
        up with diagonal matrix terms set to 0 which leads to failed
        solutions.  Fortunately, the old code had no real way to turn
        on the rate or delay flagging.
        Moved nowhere.

15200.  July
