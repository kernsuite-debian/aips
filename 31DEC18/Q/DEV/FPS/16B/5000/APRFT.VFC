      DEFINE APRFT(DATA,FT,PH0,NFT,NDATA)
"-----------------------------------------------------------------------
"! FPS VFC routine: Compute a real, inverse FT.
"# AP-appl
"-----------------------------------------------------------------------
";  Copyright (C) 1995
";  Associated Universities, Inc. Washington DC, USA.
";
";  This program is free software; you can redistribute it and/or
";  modify it under the terms of the GNU General Public License as
";  published by the Free Software Foundation; either version 2 of
";  the License, or (at your option) any later version.
";
";  This program is distributed in the hope that it will be useful,
";  but WITHOUT ANY WARRANTY; without even the implied warranty of
";  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
";  GNU General Public License for more details.
";
";  You should have received a copy of the GNU General Public
";  License along with this program; if not, write to the Free
";  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
";  MA 02139, USA.
";
";  Correspondence concerning AIPS should be addressed as follows:
";         Internet email: aipsmail@nrao.edu.
";         Postal address: AIPS Project Office
";                         National Radio Astronomy Observatory
";                         520 Edgemont Road
";                         Charlottesville, VA 22903-2475 USA
"-----------------------------------------------------------------------
"-----------------------------------------------------------------------
      LOCAL DPH,DPH0,DDPH
"
"     APRFT COMPUTES A REAL, INVERSE FOURIER TRANSFORM FROM ARBITARILY
"     SPACED DATA.
"
"     INPUTS:
"     DATA    = AP BASE LOCATION OF INPUT DATA
"     FT      = AP BASE LOCATION OF OUTPUT F.T.
"     PH0     = AP BASE ADDRESS OF PHASE INFORMATION FOR F.T.
"               0=COS((TWOPI/(NG*NFT))*(1-ICENT)(1-BIAS))
"               1=SIN((TWOPI/(NG*NFT))*(1-ICENT)(1-BIAS))
"               2=COS((TWOPI/(NG*NFT))*(1-ICENT))
"               3=SIN((TWOPI/(NG*NFT))*(1-ICENT))
"               4=COS((TWOPI/(NG*NFT))*(1-BIAS))
"               5=SIN((TWOPI/(NG*NFT))*(1-BIAS))
"               6=COS((TWOPI/(NG*NFT)))
"               7=SIN((TWOPI/(NG*NFT)))
"               ICENT=CENTER PIXEL OF GRID
"               BIAS=CENTEROF DATA ARRAY (1 REL.)
"               NG = NO. TABULATED POINTS PER CELL.
"     NFT     = NUMBER OF FT. POINTS
"     NDATA   = NUMBER OF DATA POINTS
"
"     PROGRAMMER = W. D. COTTON, SEPTEMBER 1980.
"
      IF NDATA <= 0 GOTO S999                 "MAKE SURE THERE IS SOME DATA
"            SET PHASE POINTERS
      DPH = PH0 + 2                           "DELTA PHASE
      DPH0 = PH0 + 4                          "DELTA PHASE0
      DDPH = PH0 + 6                          "DELTA DELTA PHASE
"            FOURIER TRANSFORM LOOP.
      CALL PHSROT(DATA,2,DATA,2,PH0,DPH,NDATA)"ROTATE PHASES
LOOP: CALL SVE(DATA,2,FT,NDATA)LOOP: LOOP:    "SUM REALS
      CALL PHSROT(DATA,2,DATA,2,DPH0,DDPH,NDATA)"ROTATE PHASES
      FT = FT + 1                             "UPDATE FT POINTER
      NFT = NFT - 1                           "DECREMENT LOOP COUNTER
      IF NFT > 0 GOTO LOOP                    "LOOP
S999: END
