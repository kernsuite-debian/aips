#!/bin/sh
##-----------------------------------------------------------------------
#! Update AIPS binary areas via rsynch
## UPDATE UNIX
#-----------------------------------------------------------------------
#;  Copyright (C) 2004-2005, 2007, 2009, 2016
#;  Associated Universities, Inc. Washington DC, USA.
#;
#;  This program is free software; you can redistribute it and/or
#;  modify it under the terms of the GNU General Public License as
#;  published by the Free Software Foundation; either version 2 of
#;  the License, or (at your option) any later version.
#;
#;  This program is distributed in the hope that it will be useful,
#;  but WITHOUT ANY WARRANTY; without even the implied warranty of
#;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#;  GNU General Public License for more details.
#;
#;  You should have received a copy of the GNU General Public
#;  License along with this program; if not, write to the Free
#;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
#;  MA 02139, USA.
#;
#;  Correspondence concerning AIPS should be addressed as follows:
#;         Internet email: aipsmail@nrao.edu.
#;         Postal address: AIPS Project Office
#;                         National Radio Astronomy Observatory
#;                         520 Edgemont Road
#;                         Charlottesville, VA 22903-2475 USA
#-----------------------------------------------------------------------
#   Update the $AIPS_VERSION/$ARCH areas (mostly $LOAD) from NRAO.
#   $RsyncMaster  must be set as well as $LogFile, $AIPS_VERSION, $ARCH
#-----------------------------------------------------------------------

echo ""                   >> $LogFile
echo "UPDRSYNC:  doing binary synchronization" >> $LogFile
[ -t 1 ] && echo "UPDRSYNC:  doing binary synchronization"
echo ""                   >> $LogFile
#                                        rsync
rcount=0
MAX_RCOUNT=20           #Give ourselves 200 minutes before giving up
#
#   cd $AIPS_VERSION/$ARCH
cd $AIPS_VERSION
basen=`basename $AIPS_VERSION`
baset=`basename $AIPS_ROOT/TEXT`
while true
do
                         #If the grep succeeds then do the rsync for real
                         #otherwise wait ten minutes and try again
                         #if we don't succeed after 20 tries give up
     INPROG=`rsync -nvca $RsyncMaster::$basen/SYSTEM/* | grep BUILD.INPROG`
     INPROG="X$INPROG"
     if [ "$INPROG" != "X" ]
     then
        [ -t 1 ] && echo "UPDRSYNC: rsync build underway, waiting...."
        echo "UPDRSYNC: rsync build underway, waiting...."  >> $LogFile
        rcount=`expr $rcount + 1`
        if [ $rcount -gt $MAX_RCOUNT ]
        then
           echo ""                                                   >> $LogFile
           [ -t 1 ] && echo "UPDRSYNC: rsync failed to upate, try again later."
           echo "UPDRSYNC: rsync failed to upate, try again later."  >> $LogFile
           echo ""                                                   >> $LogFile
           break
        fi
        sleep 600
     else
        echo ""           >> $LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync $ARCH/SYSTEM"
        echo "UPDRSYNC: rsync $ARCH/SYSTEM"           >> $LogFile
        rsync -vcaz --timeout=480 $RsyncMaster::$basen/$ARCH/SYSTEM/* $ARCH/SYSTEM >>$LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync $ARCH/LIBR"
        echo "UPDRSYNC: rsync $ARCH/LIBR"           >> $LogFile
        rsync -vcaz --timeout=480 $RsyncMaster::$basen/$ARCH/LIBR/* $ARCH/LIBR >>$LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync $ARCH/LOAD"
        echo "UPDRSYNC: rsync $ARCH/LOAD"           >> $LogFile
        rsync -vcaz --timeout=960 $RsyncMaster::$basen/$ARCH/LOAD/* $ARCH/LOAD >>$LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync AIPS"
        echo "UPDRSYNC: rsync AIPS"           >> $LogFile
        rsync -vcaz --timeout=480 $RsyncMaster::$basen/AIPS/* AIPS >>$LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync APL"
        echo "UPDRSYNC: rsync APL"           >> $LogFile
        rsync -vcaz --timeout=480 $RsyncMaster::$basen/APL/* APL >>$LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync DOC"
        echo "UPDRSYNC: rsync DOC"           >> $LogFile
        rsync -vcaz --timeout=480 $RsyncMaster::$basen/DOC/* DOC >>$LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync HELP"
        echo "UPDRSYNC: rsync HELP"           >> $LogFile
        rsync -vcaz --timeout=480 $RsyncMaster::$basen/HELP/* HELP >>$LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync HIST"
        echo "UPDRSYNC: rsync HIST"           >> $LogFile
        rsync -vcaz --timeout=480 $RsyncMaster::$basen/HIST/* HIST >>$LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync INC"
        echo "UPDRSYNC: rsync INC"           >> $LogFile
        rsync -vcaz --timeout=480 $RsyncMaster::$basen/INC/* INC >>$LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync Q"
        echo "UPDRSYNC: rsync Q"           >> $LogFile
        rsync -vcaz --timeout=480 $RsyncMaster::$basen/Q/* Q >>$LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync QY"
        echo "UPDRSYNC: rsync QY"           >> $LogFile
        rsync -vcaz --timeout=480 $RsyncMaster::$basen/QY/* QY >>$LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync RUN"
        echo "UPDRSYNC: rsync RUN"           >> $LogFile
        rsync -vcaz --timeout=480 $RsyncMaster::$basen/RUN/* RUN >>$LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync SYSTEM"
        echo "UPDRSYNC: rsync SYSTEM"           >> $LogFile
        rsync -vcaz --timeout=480 $RsyncMaster::$basen/SYSTEM/* SYSTEM >>$LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync Y"
        echo "UPDRSYNC: rsync Y"           >> $LogFile
        rsync -vcaz --timeout=480 $RsyncMaster::$basen/Y/* Y >>$LogFile
        [ -t 1 ] && echo "UPDRSYNC: rsync TEXT"
        cd $AIPS_ROOT
        echo "UPDRSYNC: rsync TEXT"           >> $LogFile
        rsync -vcaz --timeout=480 $RsyncMaster::$baset/* TEXT >>$LogFile
        echo ""           >> $LogFile
        break
     fi
done
#
#                                        reports
cd $AIPS_VERSION/$ARCH/UPDATE
echo ""                   >> $LogFile
echo "UPDRSYNC:  COMRPLs" >> $LogFile
echo ""                   >> $LogFile
cat COMRPL.UNQ            >> $LogFile
echo ""                   >> $LogFile
echo "UPDRSYNC:  COMLNKs" >> $LogFile
echo ""                   >> $LogFile
cat COMLNK.UNQ            >> $LogFile
echo ""                   >> $LogFile
