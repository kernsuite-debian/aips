$ DOFARS.001
$---------------------------------------------------------------
$! RUN file to define procs to simplify running FARS
$# Run ANALYSIS POLARIZATION
$---------------------------------------------------------------
$;  Copyright (C) 2011-2013, 2015
$;  Associated Universities, Inc. Washington DC, USA.
$;
$;  This program is free software; you can redistribute it/or
$;  and/or modify it under the terms of the GNU General Public
$;  License as published by the Free Software Foundation; either
$;  version 2 of the License, or (at your option) any later
$;  version.
$;
$;  This program is distributed in the hope that it will be
$;  useful, but WITHOUT ANY WARRANTY; without even the implied
$;  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
$;  PURPOSE.  See the GNU General Public License for more
$;  details.
$;
$;  You should have received a copy of the GNU General Public
$;  License along with this program; if not, write to the Free
$;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
$;  MA 02139, USA.
$;
$;  Correspondence concerning AIPS should be addressed as
$;  follows:
$;         Internet email: aipsmail@nrao.edu.
$;         Postal address: AIPS Project Office
$;                         National Radio Astronomy Observatory
$;                         520 Edgemont Road
$;                         Charlottesville, VA 22903-2475 USA
$---------------------------------------------------------------
PROC DEFARS
SCALAR FBLC, FTRC, DOWINAIT
STRING*48 FINFIL
FINISH
$
PROC DOFARS
$                                            defaults
if (outname=' ') then; outname = inname; end
if (indisk<=0) then; print 'indisk <= zero'; return; end
if (in2disk<=0) then; print 'in2disk <= zero'; return; end
if (outdisk<=0) then; outdisk = indisk; end
fblc = blc(3); ftrc=trc(3); blc(3)=0; trc(3)=0; intype='ma'
dowinait=dowait; dowait=1
if (infile<>' ') then; finfil=' ';
   else; finfil='FITS:DOFARS.weights'; end
vnum = 33 - getpopsn; vput dofars
$                                            rspec weights
if (finfil<>' ') then;
   filezap finfil
   default rspec; vget dofars; task 'rspec'
   blc 0; trc 0; opcode 'weit'; doslice=-1; doprint=-3;
   outprint=finfil; go;
   end
$                                            trans 1
default trans; vget dofars; task 'trans'
outname=inname; outclass='TRANS1'; outseq=0;
outdisk=indisk; transcod='312'; go
$                                            trans 2
default trans; vget dofars; task 'trans'
inname=in2name; inclass=in2class; inseq=in2seq;
indisk=in2disk; outname=inname; outclass='TRANS2';
outseq=0; outdisk=indisk; transcod='312'; go
$                                            fars
default fars; vget dofars; task 'fars'
inclass='TRANS1'; in2class='TRANS2'; inseq=0; in2seq=0;
if (infile=' ') then; infile=finfil; end
if (infile='1') then; infile=' '; end
blc=fblc,0; trc=ftrc,0; go
$                                            clean up
zap; inname=in2name; inclass=in2class; inseq=in2seq;
indisk=in2disk; zap
$                                            more trans
task = 'trans'; inname=outname; inclass='FARSre
indisk=outdisk; inseq=outseq; blc=0; trc=0; transc='231';
if (aparm(5)>=1.5) then; outclass='TRANam
    inclass='FARSam
   else; outclass='TRANre
   end; go
inname=outname; indisk=outdisk; inclass='FARSim
inseq=outseq; outname=outname; outseq=outseq;
outdisk=outdisk;
if (aparm(5)>=1.5) then; outclass='TRANph
   inclass='FARSph
   else; outclass='TRANim
   end; go
$                                            clean return
dowait=dowinait; vget dofars; blc(3)=fblc; trc(3)=ftrc
return
FINISH
