$ BASFIT.001
$---------------------------------------------------------------
$! RUN file to fit antenna locations using CALIB and LOCIT
$# Run POPS calobration
$-----------------------------------------------------------------------
$;  Copyright (C) 2002
$;  Associated Universities, Inc. Washington DC, USA.
$;
$;  This program is free software; you can redistribute it/or
$;  and/or modify it under the terms of the GNU General Public
$;  License as published by the Free Software Foundation; either
$;  version 2 of the License, or (at your option) any later
$;  version.
$;
$;  This program is distributed in the hope that it will be
$;  useful, but WITHOUT ANY WARRANTY; without even the implied
$;  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
$;  PURPOSE.  See the GNU General Public License for more
$;  details.
$;
$;  You should have received a copy of the GNU General Public
$;  License along with this program; if not, write to the Free
$;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
$;  MA 02139, USA.
$;
$;  Correspondence concerning AIPS should be addressed as
$;  follows:
$;         Internet email: aipsmail@nrao.edu.
$;         Postal address: AIPS Project Office
$;                         National Radio Astronomy Observatory
$;                         520 Edgemont Road
$;                         Charlottesville, VA 22903-2475 USA
$-----------------------------------------------------------------------
PROCEDURE BAS_VARS
   STRING*2  VBA_TYPE
   STRING*8  VBA_KEYW
   STRING*16 VBA_KEYS
   ARRAY     VBA_KEYV(2)
   SCALAR    PLVIN, PLCOLR
   FINISH
$
PROCEDURE MAXTAB (VBA_TYPE)
*-----------------------------------------------------------------------
*   Return the highest version number of a table of type VBA_TYPE
*   attached to the specified file.
*
*   Inputs:
*       VBA_TYPE    Table type
*
*   Adverbs:
*       USERID      User ID
*       INNAME      File name
*       INCLASS     File class
*       INSEQ       File sequence number
*       INDISK      File disk number
*-----------------------------------------------------------------------
    SCALAR VBA_SLOT
    SCALAR VBA_VERS
*-----------------------------------------------------------------------
*
*   Save adverb values
*
    VBA_KEYW = KEYWORD
    VBA_KEYV = KEYVALUE
    VBA_KEYS = KEYSTRNG
*
    VBA_SLOT = 0
    KEYSTRNG = '  '
*  Invariant: KEYSTRNG <> VBA_TYPE implies that no of the first
*             VBA_SLOT tables has type VBA_TYPE
*  Bound: 50 - VBA_SLOT
    WHILE VBA_SLOT <> 50 & KEYSTRNG <> VBA_TYPE
        VBA_SLOT = VBA_SLOT + 1
        KEYWORD = 'EXTYPE' !! CHAR(VBA_SLOT)
        GETHEAD
    END
*  If KEYSTRNG = VBA_TYPE then VBA_SLOT is the index for table type
*  VBA_TYPE in the file header otherwise there are no tables of type
*  VBA_TYPE.
    IF KEYSTRNG = VBA_TYPE THEN
       KEYWORD = 'EXTVER' !! CHAR(VBA_SLOT); GETHEAD
    ELSE
       KEYVALUE(1) = 0
       END
    VBA_VER = KEYVALUE(1)
*                                           Restore saved adverbs
   KEYWORD  = VBA_KEYW; KEYVALUE = VBA_KEYV; KEYSTRNG = VBA_KEYS
   RETURN VBA_VER
   FINISH
$
PROCEDURE BASFIT
$                                 set up calib
tput basfit;
plcolr = docolor;
default calib
tget basfit
inputs basfit
antennas = 0
calcode='*';
aparm=3,0
dowait 1
go calib
$                                set up locit
default locit
tget basfit
dparm=0,1,30,200,-90,90
bparm 1,0,20,-20,1,2
if (docolor) then
   bparm(1) = 3; bparm(8) = 2; end
prtlev = 1
PLVIN = MAXTAB('PL')
go locit
$                                     plot the output
default lwpla
tget basfit
if (docolor) then
   plcolors = 0 1 1 1 .67 1 .06 1 0 1 1 0
   plcolors(1,9)~ 1 1 1 0.07 0.08 0.03
   end
INVERS = MAXTAB('PL')
plver = plvin+1
go lwpla
dowait = -1
return
finish
