; READ
;---------------------------------------------------------------
;! Read a value from the users terminal
;# VERB INTERACTIVE POPS
;-----------------------------------------------------------------------
;;  Copyright (C) 1995, 2013
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning AIPS should be addressed as follows:
;;         Internet email: aipsmail@nrao.edu.
;;         Postal address: AIPS Project Office
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
READ      LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
----------------------------------------------------------------
READ
Type:  Verb
Use:   To enter adverb values in free format for a list of
       variables.
Grammar: READ adv1, adv2, adv3, ..., advn
       where adv1, adv2, etc. are valid adverb names.  They
       may refer to scalars, arrays, or strings and may be
       subscripted.  AIPS will prompt you to enter values
       with a # sign.  Type as many values to a line as you
       wish and AIPS will return to normal input mode
       (prompt character >) when enough values have been read.
       Arrays are entered in storage order (see HELP ARRAY and
       HELP STRING) and character string data must be
       enclosed in quotes ( ' ).

       Care must be taken with this verb.  The data to be read must be
       entered from the input unit that issues the READ.  Thus, if
       "READ I" occurs in a simple text file that is being RUN, the
       value for I must appear in the next line of the text file - it
       is not entered from the terminal.  READ is best used in
       procedures.  Then the value to be read is placed on the input
       source that is used to invoke the procedure.  Thus, if one RUN
       file is used to define a procedure, say MYPROC, containing a
       READ and another RUN file invokes MYPROC, then that second RUN
       file must contain the values to be read.  A procedure that is
       defined in whatever way, but invoked from the interactive
       terminal will READ from the terminal.
----------------------------------------------------------------
