; CCMOD
;---------------------------------------------------------------
;! generates clean components to fit specified source model
;# Task Imaging
;-----------------------------------------------------------------------
;;  Copyright (C) 1995, 1998
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning AIPS should be addressed as follows:
;;         Internet email: aipsmail@nrao.edu.
;;         Postal address: AIPS Project Office
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
CCMOD     LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCMOD:  Task to generate clean components from a model source
INNAME                             Image name (name)
INCLASS                            Image name (class)
INSEQ             0.0    9999.0    Image name (seq. #)
INDISK            0.0       9.0    Disk drive #
INVERS           -1.0   46655.0    CC file ver. no.: 0 higest
                                      -1 new version
OPCODE                             Model type: 'DISK','GAUS'
FLUX                               Model flux
BMAJ              0.0              Model major axis in pixels
BMIN              0.               Model minor axis in pixels
BPA            -360.0     360.0    Position angle of major axis
PIXXY          -100.0    8192.0    Model center in pixels
BITER             0.               Place results after comp #
----------------------------------------------------------------
CCMOD
Type:  Task
Use:   CCMOD generates a set of Clean components for a model source.
       These components are then inserted into the Clean components file
       (CC) associated with an image.  This task is useful for
       generating clean components of an extended source of known
       parameters a priori.  Further Cleaning (APCLN, IMAGR, etc) can
       then be done.
Adverbs:
  INNAME......The image name (name).    Standard defaults.
  INCLASS.....The image name (class).   Standard defaults.
  INSEQ.......The image name (seq. #).  0 => highest.
  INDISK......The disk drive #.         0 => any.
  INVERS......The CC file ver #.        0 => highest current one.
              -1 => create new one.  If none exists, one will be created
              in any case.  Be careful with this.  If you request some
              large number you will get it.
  OPCODE......The model type: 'DISK' or 'GAUS' or 'POIN'
  FLUX........The total flux density in the model
  BMAJ........The model major axis in asec. Diameter for 'DISK',
              FWHP for 'GAUS' in pixels
  BMIN........The model minor axis in pixels.
  BPA.........The position angle (deg) of the major axis.
  PIXXY.......(X,Y,...) position of center of the model in pixels.
  BITER.......Place model components after component BITER.  Note that
              components BITER+1 through BITER+n get replaced by the
              model, where n is the number of cells with significant
              value.  Set BITER = 0 or large to write at the end of the
              current CC file, retaining all current components.
----------------------------------------------------------------
CCMOD:  Task to generate Clean components from a model source.
DOCUMENTOR:  Alan Bridle (NRAO-Charlottesville)
RELATED PROGRAMS:  APCLN, PHCLN, PRTCC

                          PURPOSE

     As described in the documentation of APCLN, Clean algorithms
attempt to answer the question "What is the distribution of amplitudes
at the Clean component positions which best fits the visibility data, if
we define the sky to be blank everywhere else ?"  Clean can then be
thought of a "search" for places where there should be components, and
an adjustment of the intensities at these places to obtain the best
agreement with the data.

     The user can greatly assist the search for appropriate locations
for Clean components by telling Clean where the source is and what shape
it should be.  Specifying the "Clean Window" via NBOXES and BOX in APCLN
gives the algorithm a boundary within which to hunt for emission, but
still allows it to find components one at a time within this boundary by
searching the residual map.  This can (and does) lead to a scattering of
Clean components through an extended region, with empty areas between
them - a "pincushion" of components where an extended emission region
may be more plausible.  This is inefficient if the user KNOWS that the
source being mapped should have emission EVERYWHERE within a certain
boundary, i.e. that EVERY LOCATION within that boundary should have a
Clean component whose amplitude is to be adjusted.

     CCMOD provides a means of telling APCLN that this is the case, by
generating an initial list of Clean components from a specified model
rather than by searching a map one location at a time.  Two types of
model are provided - DISKs and GAUSsians, selected by the OPCODE
parameter.  DISK is intended for use when mapping planets, the Sun, or
other objects in which fine detail is superposed on a bright filled disk
background.  GAUS may find applications to sources where a bright
diffuse region fades at the edges, e.g. lobes of extragalactic sources.

     FLUX is the total flux density in the model.  BMAJ and BMIN are in
units of pixels.  Depending on edge effects, the total flux density
actually put into the clean components may differ by 10% (or more for
small objects) from the value in FLUX.
