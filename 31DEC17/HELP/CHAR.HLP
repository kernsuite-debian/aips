; CHAR
;---------------------------------------------------------------
;! converts number to character string
;# Verb POPS
;-----------------------------------------------------------------------
;;  Copyright (C) 1995
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning AIPS should be addressed as follows:
;;         Internet email: aipsmail@nrao.edu.
;;         Postal address: AIPS Project Office
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
;---------------------------------------------------------------
CHAR      LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CHAR  :  Function verb to convert a number to a string.
          NO adverbs.  Instead, CHAR takes 1 argument as
                        CHAR (value)
          where value is any numeric scalar POPS adverb or
          constant.
----------------------------------------------------------------
CHAR
Type:  Verb      (function: leaves results on the stack)
Use:   To convert a scalar numeric quantity to a string requires
       1 immediate argument as
                     CHAR  (value)
       where value is the adverb or constant to be converted.
       The basic format used is F9.4.  However, this format will
       be revised to encompass small and large numbers, even
       going to exponential notation if required.  No more than
       9 characters will be used.  Leading blanks and trailing
       zeros are suppressed.  Syntax example:
               SUBSTR (INNAME, 6, 12) = CHAR (I)
       Numeric examples:
             I = 3.0                CHAR (I) = '3'
                 4.00003                       '4'
                 5.0678                        '5.0678'
                 0.000000067                   '6.700E-08'
                 12345678.0                    '12345678'
                 0.12e16                       '1.200E+15'
                 0.23e-8                       '2.300E-09'
Adverbs:   none.
----------------------------------------------------------------
