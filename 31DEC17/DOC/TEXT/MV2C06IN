@@
Inputs files:                IN100000 (name)


A. Overview


Function:  Inputs files are text files used to describe the adverbs
required by verbs and tasks to AIPS.

Details:  Inputs files are text files stored as "members" of a logical
area called INPUTS.  On the VAX, this area is a separate logon.  On the
MODCOMP, this are is a SEDIT file called IN100000.  The text in each
inputs file is interpreted in AIPS for display of current adverb
values and for task activation.

Names:  Each inputs file is named with the name of the verb or task
which it describes.


B. File structure and contents


     The inputs files are text files prepared by the local text editor.
Thus, the details of their structures and their relationship to the
operating system are machine dependent.  On the VAX, they are separate
physical, FORTRAN files in a logon area called INPUTS.  On the MODCOMP,
they are members of a directoried source editor (SEDIT) file called
IN100000.

     The textual contents of Inputs files are specified, however.  The
first line is ignored, but still has a conventional form:

     columns         description
      1 - 10     File name, left-justified and blank filled
     11 - 22     Filled with L's
     23 - 34     Filled with U's
     35 - 64     Filled with C's
     65 - 80     Blank filled

The L, U, and C areas are simply aids to typing the following parts of
the text.  The second line is used as a header for the user display of
the inputs.  It has the form

     columns          description
      1 - 10     Verb or task name
     11 - 64     Description of function of the verb/task
     65 - 80     Blank filled

All following lines in the file have the form

     columns         description
      1 - 10     Adverb name, left-justified and blank filled
     11 - 22     Lower limit for real (numeric) adverbs, free format
     23 - 34     Upper limit for real (numeric) adverbs, free format
     35 - 64     Comment field to describe adverb
     65 - 80     Blank filled

The upper and lower limit fields are optional for numeric adverbs and
should be omitted for character-valued adverbs.  The comment field is
optional, but highly recommended.  If the adverb field is blank, then
the rest of the line (columns 11 - 64) are treated as a comment.  Use
only columns 35 - 64, however, if the preceding adverb was an array.
As an example, consider

IMLOD     LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
IMLOD:  Task to store an image from a FITS or IBM-CV tape
INTAPE            0.0       2.0    Input tape drive # (0=> 1)
OUTNAME                            Image name (name)
                                     blank=> file or source name
OUTCLASS                           Image name (class)
                                     blank=> STYP (See HELP)
OUTSEQ            0.0    9999.0    Image name (seq. #)
                                     0=> first unique number
OUTDISK           0.0       3.0    Disk drive # (0=> user disk)

Note that the adverb names must be typed with capital letters, but the
comment fields should be typed in lower case.


C. Usage notes


     Inputs files are an important part of AIPS.  They are the data
structures which allow AIPS and the AIPSBn's to activate tasks.  In
addition, they provide run-time documentation showing the user which
adverbs are used by a verb or task and what their current values are.
There must be an inputs file for every verb and task.


D. Routines and commons for reading inputs files


     Inputs files are opened and the member is located by the subrou-
tine ZTOPEN.  They are read sequentially by ZTREAD and closed by
ZTCLOS.  By convention, the logical unit number used for this is 11.
These text files I/O routines are described elsewhere in this volume.

     The subroutines which interpret these files are AU1A for the user
display and AU2 for the task activation.  The numerical upper and lower
bounds are used by AU1A to print errors when adverbs are out of range
and by AU2 to abort the task activation process when adverbs are out of
range.  AU2 ignores the comments and AU1A displays them.


E. Routines and commons for writing inputs files


     Inputs files are prepared by programmers using their local source
editors (e.g. SOS on VAX and SEDIT on MODCOMP).  No routines are to
write such files at run time.
