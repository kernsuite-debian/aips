.ps 60
.rm 71
.autoparagraph
.subtitle
.date
.flags substitute
.flags underline
.flags bold
.! Setup commands for the QMS Lasergrafix Printer
.! (DCW, 28Oct84, suggested by Eric)
.! (see the "Runtime Setup Commands" appendix of the QMS manual)
.! (portrait mode, font#404, 6.00 lines/inch, 10.00 char/inch,
.!  00.700 inches down from top, 00.700 inches from left)
.! (^PY^- and ^PN^- are "QUIC" begin and end commands, respectively)
.!-----------------------------------------------------------------------
.!;  Copyright (C) 1995
.!;  Associated Universities, Inc. Washington DC, USA.
.!;
.!;  This program is free software; you can redistribute it and/or
.!;  modify it under the terms of the GNU General Public License as
.!;  published by the Free Software Foundation; either version 2 of
.!;  the License, or (at your option) any later version.
.!;
.!;  This program is distributed in the hope that it will be useful,
.!;  but WITHOUT ANY WARRANTY; without even the implied warranty of
.!;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.!;  GNU General Public License for more details.
.!;
.!;  You should have received a copy of the GNU General Public
.!;  License along with this program; if not, write to the Free
.!;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
.!;  MA 02139, USA.
.!;
.!;  Correspondence concerning AIPS should be addressed as follows:
.!;          Internet email: aipsmail@nrao.edu.
.!;          Postal address: AIPS Project Office
.!;                          National Radio Astronomy Observatory
.!;                          520 Edgemont Road
.!;                          Charlottesville, VA 22903-2475 USA
.!-----------------------------------------------------------------------
.lit
^PY^-
^IOP^IS404^IL0600^IC1000^IJ00700^IT00700^PN^-
.end lit
.;____________________________________________________
.s3
.c;AIPS GRIPES Procedures
.title GRIPES Procedures
.s2
.c;Donald C.#Wells, Eric W.#Greisen, Nancy D.#Wiener
.s1
.c;National Radio Astronomy Observatory [_*]
.footnote 4
.lit
______________
.end lit
.lm+4.p-4,0,0
[_*] The National Radio Astronomy Observatory is operated by
Associated Universities, Inc., under contract with the U.#S.#National
Science Foundation.
.end footnote
.c;Edgemont Road, Charlottesville, VA 22903-2475
.c;(804)296-0211, FTS=938-1271, TWX=910-997-0174
.s1
.set date 01 06 1985
.c;$$day $$month $$year
.s2
.c;Abstract
.s1
.lm+7.rm-7
This memo documents the procedures used to operate the GRIPES system.
It is divided into three parts: a discourse on gripes, a description
of the system by which they are to be managed, and a detailed manual
describing the tools provided to do the management.
.lm-7.rm+7
.s2
.c;CONTENTS
.s1
.require "gripes.rnt"
.send toc.lm0

.hl1Introduction

The AIPS GRIPES system is the most reliable and efficient means for
AIPS users to communicate with the AIPS programmers. It is intended
to be used for software problem reports and for suggestions for
improvement of the software. The automatic tools which have been
constructed are intended to enable the AIPS group to cope with large
numbers of gripes and the organized, machine readable form of the
information facilitates systematic processing and information
retrieval. This memo is intended to document the procedures used in
Charlottesville for gripe collection, cleanup, typesetting, and
distribution.  Documentation of these procedures will facilitate
transferring the responsibility for the operation of the system to
new persons in the future.

.tp20.hl1The AIPS GRIPES System
.tp15.hl2Properties of the gripe files

The gripe file on an AIPS system has the name GR100000. It is
not a simple text file.  Instead it contains a mixture of text and
binary information.  The format of this file is documented in the
file DOCTXT:MV2C06GR.  Its directory has a fixed size, which implies
that the file holds a finite number of gripes. The number is 83 and,
when it is reached, the gripe routines apologize and refuse to accept
any more gripes.  The gripe files should be cleaned out regularly to
avoid this problem.  Gripe files have been damaged during
installation of new versions of AIPS; thus it is good practice to get
the gripes before an installation.

.tp15.hl2AIPS Commands and User Programs

     There are two programs in the AIPS system by which users may
enter and examine gripes.  They are AIPS itself and a stand-alone
program GRIPR.  On VAX systems, these programs are invoked by the
procedures @[AIPS]AIPS and @[AIPS]GRIPE, respectively.

     Gripes are entered on AIPS systems by using the verb "GRIPE" in
either AIPS or GRIPR.  The program responds by issuing instructions
and prompting for needed information such as name, address, phone, and
the gripe itself.

     The current set of gripes on a system may be examined in two ways
using either AIPS or GRIPR.  To obtain an index enter the command
.lit

        GRINDEX                         (print index of gripes)

.end lit
Note how many gripes there are. If you want to read them and are using
AIPS, issue the following command
.lit

        FOR JOBNUM = 1 TO 7; GRLIST; END

.end lit
(assuming there are 7 gripes) and they will be listed on the terminal.
(The FOR loop is not available in GRIPR.)  An individual gripe may be
listed, in either program, by setting JOBNUM to the desired gripe
number and issuing the GRLIST command.  The information displayed on
the terminal by GRINDEX and GRLIST may be printed using the verb
PRTMSG.

.tp15.hl2Programs GRITP and GRTOTEX

     There are two stand-alone programs to assist in processing
gripes.  GRITP is for use by AIPS Managers at sites not serviced
regularly by NRAO (CV) personnel.  It converts the contents of the
GR100000 disk file into a FITS-like format on tape suitable for
mailing to Charlottesville.  The best time for doing this is when
the Manager is returning a tape and shipping mailer to request a new
version of AIPS.  A blank is provided on the Order Form to tell
us that there are gripes on the tape.  (See Section 4.1.2 for an
example of the use of GRITP.)

     The other program is intended to be used on the NRAO VAXes to
convert the local GR100000 file and tapes written by GRITP to VAX
text files in a preliminary form suitable for editing and
typesetting.  This program is not written in a transportable fashion.

.tp15.hl2TEXsetting the gripes

The gripes are TEXset using TEX.  We use TEX for gripe files for two
main reasons:
.lm+1.ls"-"
.le;All gripes are read by at least three people in CV; many are read
by four people. Several of the people read them more than once. In
addition, copies of all gripes are placed in the AIPS Caiges for users
to read. Typesetting the gripes makes it easier for all of these
people to read them.
.le;It is very useful to draw clear distinctions between the names of
systems, names of programs, input typed into programs, and output
emitted by programs.  TEX assists in making these destinctions through
the use of multiple fonts.  In addition, the ability to use
mathematical notation in discussions of algorithms is frequently
helpful.
.els.lm-1
Furthermore, TEX macros allow us to alter the output form depending
on the intended reader.  Subsidiary, diagnostic information is
provided for the person answering the gripe, but is suppressed when
the gripe response is sent to the griper and placed in public
notebooks.

.tp15.hl2Handling the Gripes

     The process by which gripes are supposed to be managed is
outlined in the next section and described in gory detail in following
sections.  In its simplest form, it goes as follows:  Gripes are
collected once a week from all NRAO computers and all tapes received
during that week.  They are typeset, read, and assigned to respondents
promptly.  A copy of the received gripe and any preliminary answer
is mailed to the griper when the editing is reasonably complete.
Answers to gripes are entered in the files as they are received by
the gripe manager.  At the next freeze date for AIPS, all gripes
received during the quarter are printed out and a copy sent to the
griper.  Some of these will be complete, some partially answered
including a "to be continued" ('tbc'), and some will, unfortunately,
still have no answer.  At the same time, any new answers to older
gripes will also be sent to the gripers.  All answers are reviewed
twice before being mailed.  After the quarter's answers have been
sent, all gripe TEX files are combed and the tbc's separated from
the completed gripes.  All tbc's are then printed and redistributed
to the people who are supposed to answer them.

     In addition to mailing responses to the individual gripers, all
gripes are displayed in notebooks kept in the AIPS Caiges in
Charlottesville and at the VLA.  (They make fascinating and
informative reading.)  We also add all people who have submitted a
gripe to our main mailing list and send them quarterly copies of the
AIPSLETTER.  We do this since we take the submission of a gripe as
an expression of interest in AIPS and its development.

.tp20.hl1Gripes Management

     In the following three sections, we outline a procedure by which
we hope to manage the large volume of gripes in a responsive and
responsible manner.  At this writing, the system has not been tested
fully and, hence, may require modifications.

.tp15.hl2On a weekly basis

.lm+1.ls

.le;Nancy to fetch gripes on Monday morning from:
.lm+1.ls0"-"
.le;Charlottesville Modcomp
.le;Charlottesville VAX (CVAX::)
.le;VLA VAX 1 (AIPS::)
.le;VLA VAX 3 (VAX3::)
.le;Tucson VAX (TUCVAX::)
.els.lm-1
creating a GZiiii.TEX file for the week (where iiii is the
first gripe number in the file).  She then appends any gripes
received on tape from other sites during the previous week
and types in any received by mail.

.le;Nancy begins TEX editing GZiiii.TEX.

.le;When GZiiii.TEX will get through TEX, DVIQMS, and LAS at all,
Nancy gives Eric a copy and continues to improve the editing.

.le;Meanwhile, Eric reads everything, marking the assignments and
keywords and trapping any especially important ones.  Answers will
not normally be generated at this time, but may be if they are short
or if the problem is especially important.

.le;Eric returns the marked copy to Nancy and she enters the
assignments, keywords, and answers (if any) in the file
and completes the typesetting.

.le;Nancy runs 2 copies of each, mailing one to each griper and one
to the person who is supposed to answer the gripe.  Note that the
one to the griper should be in the form generated by FINAL=T and
the one to the respondent in the form generated by FINAL=F (see
section 4.2.5.1).

.le;Nancy appends GZiiii.TEX to the GXjjjj.TEX file being maintained
for the current quarter (and changes _\newgripe to _\tbcnew on all the
newly appended gripes).

.le;Nancy enters new gripers in WHOGETS.ADR.

.els.lm-1

.tp15.hl2On an irregular basis

.lm+1.ls
.le;Respondents write their answers out on the gripes they have been
given and return them to Nancy.

.le;Nancy enters the answers in the appropriate files.
GSnnnn.TEX files are not changed except under very special
circumstances.  GXjjjj.TEX and the GTnnnn.TEX files may be changed
freely (using CHKOUT, of course).  When a gripe response in a
GTnnnn.TEX file is changed, the string "_\changed" must be added
to the response.  This will flag that gripe so that it may be sent
to the griper at the next quarterly update.  Whenever some answer
is put into a gripe, the macros "_\newgripe" and "_\tbcnew" (which
generate the standard "we have no real answer yet" responses)
should be deleted.
.els.lm-1

.tp15.hl2On A Quarterly Basis

.lm+1.ls
.le;A bit before the magic date, Nancy reminds people to get their
answers in to her and she enters all answers which she has
received.

.le;At, or a bit after, the magic date, Nancy extracts all gripes
which have been modified during the quarter from each of the
GTnnnn.TEX files and runs off a TEX copy of each.

.le;Nancy then runs off a TEX copy of the current GXjjjj.TEX (with
_\finalrun{T}) and gives all the TEX outputs (steps 2 and 3) to Don.

.le;Don reviews the answers promptly, marking the printout if needed,
and then gives them to Eric who also reviews their contents and
enters appropriate items into the Wishlist file.

.le;Nancy makes the marked corrections to the GXjjjj.TEX file and the
GTnnnn.TEX files.  Then she runs GXjjjj.TEX through TEX with
_\finalrun{T}.  She also TEXsets the changed gripes from each of the
GTnnnn.TEX files.

.le;Nancy makes two additional copies of the TEX outputs using the
xerox machine.  One copy is filed in the CV Aips Caige, one is sent
to Pat Moore for the VLA Aips Caige, and one is sent to the griper.

.le;The GXjjjj.TEX file is edited to substitute "_\tbc" for
"_\tbcnew".  Then, it is stripped into two files: one named
GSjjjj.TEX containing completed gripes and the other named
GTjjjj.TEX containing any still having "_\tbc."

.le;The GTnnnn.TEX files are edited to remove all "_\changed"
strings.  Then all completed gripes are stripped from each
GTnnnn.TEX file and inserted in the correct numerical order
in the corresponding GSnnnn.TEX file.

.le;Nancy runs all GTnnnn.TEX files through TEX, DVIQMS, and LAS (one
copy).  She sorts the output by the assigned respondent and distributes
it.  Nancy runs the indexing program and distributes copies of the output
to all gripe respondents.
.els.lm-1

.tp20.hl1How this is all done - the details

Currently the gripes are to be retrieved from all AIPS machines,
(CVAX, ModComp, AIPS, VAX3, and TUCVAX) once a week, preferably
on Mondays, and special attention should be paid to the gripes toward
the end of each 90-day cycle so that fixes can be made ^&before\& the
deadline.

.tp15.hl2Harvesting the Gripes

The general strategy is to SET DEFAULT to a suitable directory under
the gripe manager's login, fetch the individual batches of gripes in
with temporary names, and merge them into the larger batch being
maintained for the quarter, using the
EMACS text editor. Special EMACS "Mock Lisp" macros are provided to
assist in cleanup of the gripes, numbering them, and editing
typesetting commands into the files. This section concentrates on the
commands used to fetch the gripes from the various places.

.hl3Copying gripes from nodes CVAX, AIPS, VAX3, TUCVAX

The same procedure works with all (VAX) sources of gripes. The idea is
to login to an AIPS system and define a logical symbol TARGET into
which GRTOTEX will try to write the gripes (using DECnet). In the
example below, TARGET sends the gripes into Nancy's usual directory for
gripes work. Please note that the syntax of the definition (quotes,
colons, and [possibly] use of upper case) is important.  An interesting
fact is that, should you so desire, it is possible (for complete
consistency) to SET HOST to the current machine!
.tp22.lit

        SET HOST hhhh           (CVAX, AIPS, VAX3, or TUCVAX)
        AIPS                    (to log in to account AIPS)
                       (For TUCVAX, use Tucson's password)
                       (For TUCVAX, say AIPS again to start up AIPS)
        TST                     (enter AIPS version)
        uuu                     (enter AIPS user number)
        GRINDEX                 (get a list of gripes in file)
        FOR JOBNUM = 1 TO u; GRLIST; END  (to list the gripes)
        EXIT                    (exit from AIPS)
        SET DEFAULT TST         (get into [AIPS.15mmm8y] - VMS-level)
        DEFINE TARGET "CVAX""NANCY <password>""::UMA0:[NANCY.GRIPES]"
        SHO LOGICAL TARGET      (to verify target definition)
        RUN [.LOAD]GRTOTEX
        0                       (Tape drive number {I1} 0 => disk)
        <CR>                    (Disk file name {6A4}
                                    <CR> => default: DA00:GR100000.;1)
        GZnhhhh                 (output file name: n=1,2,3,...;
                                    hhhh=CVAX,AIPS,...)
        Y                       (initialize the disk)
                       (A password is required on some systems)
        DIRECTORY/SIZE/DATE TARGET:GZnhhhh  (a check, could use "GZ*")
        LO                      (log off, return control to CVAX::)

.end lit
Some systems will not have a TST version available; in such a case,
use NEW instead.

As GRTOTEX executes, a list of the gripes will appear on the terminal.
If desired, the SET HOST to CVAX and final LO can be omitted for the
harvesting of gripes on the main AIPS on CVAX node. If
one does not want to initialize the disk just answer "N" to the final
question from GRTOTEX. Later the GR file can be initialized with this
recipe:
.lit

        RUN [.LOAD]GRITP
        0                       (Tape drive number {I1} 0 => disk)
        YES                     (Init the file? YES or NO {A4})
.end lit

Initialization causes all current gripes to be deleted from the
AIPS gripe file and hence should be done cautiously.  However, if
they are left for long, then the deferred initialization could cause
some newly-added gripe to be lost completely.  It is probably best
to answer yes to GRTOTEX except when there has been something strange
about its output while fetching the gripes.

Note that this procedure may also be run on non-NRAO VAXes if they
are connected to CVAX by DECNET or other appropriate methods.
CalTech's PHOBOS and DEIMOS VAXes are prime candidates, should the
need eventually arise.

.tp23.hl3Copying gripes from the ModComp

The general procedure is to carry the gripes from the ModComp to CVAX
node on a tape since there is no reasonable intercomputer link. The
procedure for reading them into CVAX is given in the next section. The
following recipe writes the tape on the ModComp:
.tp17.lit

                       (mount a scratch tape on Modcomp unit 1)
        JOB                     (for cleanup purposes)
        ASS 5 LO 6 LO
        EXEC GRITP,LMV
        1 (or 2)                (Tape drive number {I1}))
        WRIT                    (WRITe or VERIfy? {A4})
        YES                     (Do a verify pass? YES or NO {A4})
                                (At this point the tape should be
                                   dismounted and copied into CVAX
                                   using the procedure discussed in
                                   the next section. When it is safely
                                   inside the VAX the final question
                                   can be answered:)
        YES                     (Init the file? YES or NO {A4})
        JOB                     (cleanup)

.end lit
If this fails, try: CTRL-A, _\ON MT1, _\V_\R (for terminal 1 only).

.tp15.hl3Reading a gripe tape into "CVAX"

This procedure applies to gripe tapes received from all machines,
including the ModComp and non-NRAO VAXes:
.lit

                         (check availability of tape drive(s))
        SHO DEV MTA0            (tape drive 1 - Computer Room)
        SHO DEV MMA0            (tape drive 2 - AIPS Caige)
                         (place tape on available unit)
        SET DEFAULT TST         (get into [AIPS.15mmm8y])
        @[-]MOUNT               (for MTA0:, or @[-]MOUNT2 for MMA0:)
                                ([-] to get from [AIPS.NEW] to [AIPS])
                 (SHO LOG TST will display new (current) AIPS version)
        DEFINE TARGET "CVAX""NANCY <password>""::UMA0:[NANCY.GRIPES]"
        RUN [.LOAD]GRTOTEX
        1                     ({I1} 0 if disk, 1 if MTA0:, 2 if MMA0:)
        0                       (Files to advance +- {I3})
        GZnsssss                (output file name in "DOCGRIP" {A12}
                                    n=1,2,3...; sssss=site, e.g. MODC)
        DIRECTORY TARGET:GZnsssss       (a check)
        @[-]DISMOUNT            (or @[-]DISMOUNT2)
        DEALLOCATE MTA0:        (or MMA0:)

.end lit
One should generate names which include the site/machine, such as
GZ2MODC (ModComp), GZ2JDRLL (Jodrell Bank), GZ2PHOBOS (a CalTech
machine), GZ2CVAX (CVAX::) etc.#for the temporary GZ files.

.tp6.hl3Entering Gripes by Hand

Gripes which are submitted in the form of letters or telephone calls
may be entered into the gripe files with the editor. The procedure
is discussed below in the section on the EMACS editor.

.tp20.hl2Using the EMACS Editor on Gripe Files

The files produced by GRTOTEX all have names of the form "nnnnn.TEX",
where "nnnnn" is generally of the form "Gnnnnn", as shown in the
examples above. In the future, we hope to program the EMACS editor
on CVAX node to trigger on such names and enable special support
macros for the gripe files.  ^&At present, however, these macros
must be loaded from the "DOCGRIP"
directory immediately after accessing a gripe file via EMACS, before
attempting to do any editing on the file.\&  To do this, issue the
command:  "ESC-X:#LOAD DOCGRIP:GRIPES.ML", followed by "ESC-X:#GRIPE".
(Note that the use of lower case for most commands is acceptable;
however, upper case ^&must\& be used for "GRIPE" when issuing "ESC-X:#GRIPE".)
This section describes the procedures used with EMACS and the support
provided. We assume the usual level of familiarity with EMACS and
don't describe EVERY detail.

.tp15.hl3Merging gripe files, Cleaning and Numbering

The general strategy is to use EMACS to combine the individual gripe
files into one, clean it up, and give the gripes successive numbers
beginning with one more than the highest previous gripe. The usual
steps are in the following sequence:
.lm+1.ls

.le;Start up EMACS.

.le;Visit the highest numbered existing gripe file. Look at the end
of the file to find the highest numbered gripe.

.le;"Visit" a file with a name "GZnnnn.TEX" where "nnnn" is one
larger than the previous highest number (actually the file is new and
so it is not literally visited).

.le;Insert the first new gripe file.

.le;For each additional gripe file do the following steps:
.lm+1.ls0"-"
.le;Move to the end of the buffer.
.le;Insert the next new gripe file (if any).
.els.lm-1

.le;Move to the end of the file and add gripes from
letters and verbal comments as described in the next section.

.le;Issue "ESC-X:#LOAD DOCGRIP:GRIPES.ML" and "ESC-X:#GRIPE" (note upper
case must be used for "GRIPE") in order to load the gripes macro.
This step is temporary; in the future we hope to have the procedure
autoloaded.

.le;Issue "ESC-X:#CLEANUP". This procedure edits the text extensively:
.lm+1.ls0"-"
.le;cleans up a several basic TEX commands
.le;changes {_\tbc} to {_\secret{_ }_\newgripe}
.le;deletes TABs
.le;deletes leading blanks on lines
.le;deletes NLs (new lines) before }
.le;deletes NLs (new lines) after {
.le;deletes redundant NLs
.le;deletes blanks after { and before }
.le;replaces VAX_#1 with VAX1 and VAX_#3 with VAX3.
.le;query-replaces "_&" with "_\_&" (you may
actually want "_\_&_\_ " to get the spacing right)
.le;query-replaces "_%" with "_\_%" (or "_\_%_\_ ")
.le;query-replaces "_$" with "_\_$" (or "_\_$_\_ ")
.le;query-replaces "_#" with "_\_#" (or "_\_#_\_ ")
.le;query-replaces "__" with "_\__" (or "_\___\_ ")
.le;query-replaces "_^_^" with "_\_^_^" (or "_\_^_^_\_ ")
.le;query-replaces "_~" with "_$_\sim_$"
.le;deletes blanks before . , : ? !
.le;query-replaces "_<" with "_$_<_$" and "_>" with "_$_>_$"
.le;query-replaces "_*" with "_$_\ast_$".

.els.lm-1
The replacement operators are designed to recognize special symbols
that have already been cleaned up. They do this by temporarily
transforming the patterns to something else which is not recognized
by the query-replace patterns. This allows the "cleanup-gripes"
command to be executed on a file more than once. The "query-replace"
operations listed above allow the person to exercise judgement.

.le;Move to the beginning of the file and issue "ESC-X:#NUMBER".
It will ask for a new starting number (use the "nnnn" from the file
name) and will proceed to renumber the gripes.

.le;For insurance, copy the edited gripe file, naming the copy
GZnnnnbu.TEX, and use PUTBCK to put the file into the "DOCGRIP"
directory. Then edit various typesetting features into the text as
discussed in a subsequent section.

.els.lm-1

.tp15.hl3Entering Gripes by Hand

Once the gripe files have been merged, additional gripes can be added
to the end of the file (just before the "_\end"). For each new
gripe, _ insert (_^_^x-_^_^I) the gripe template which is in the file
DOCGRIP:GTEMPLATE.TEX. Then fill in the empty TEX brackets with the
relevant information. Use the "ESC-Y" keystroke to insert today's date.
The template contains comments (_% followed by text following the {}s)
as a guide to filling in the information.  These comments must be
deleted after the information has been inserted.

.tp15.hl3Special Keys and Macros Supported by EMACS

A gripe file is a special case of a TEX file (name of form
G{S|T|X|Z}nxxxx.TEX). A variety of features are supported as
a part of being in "TEX" mode. Others are supported for gripe files,
which are in "GRIPE" mode.  Useful keystrokes and macros which are a
part of basic TEX support are:
.lm+1.ls

.tp5.le;Font selectors:
.lm+1.ls0"-"
.le;"ESC-I"       encases a word with control symbols for "italic" font
.le;"ESC-T"       encases a word with control symbols for "teletype" font
.le;"ESC-S"       encases a word with control symbols for  "script" font
[used for system names].
.els.lm-1

.tp5.le;Case selectors:
.lm+1.ls0"-"
.le;"ESC-U"       makes a word be all upper case
.le;"ESC-L"       makes a word be all lower case
.le;"ESC-C"       makes a word be "capitalized" (first character upper
case, rest all lower).
.els.lm-1

.le;"ESC-A"       deletes redundant blanks in neighborhood of cursor
(leaves only one blank).

.le;"ESC-X:#BRACKETS" checks a file for matching brackets and
parentheses. Any TEX file (and therefore any gripe file) which cannot
pass this test is unlikely to operate correctly with TEX.

.tp6.le;Additional features which are enabled in "GRIPE" mode are:
.lm+1.ls0"-"
.le;"ESC-N"       positions "next" gripe on the window
.le;"ESC-P"       positions "previous" gripe on the window
.le;"ESC-M"       moves forward to next empty TEX bracket ("{}")
.le;"ESC-Y"       inserts a date string (use for dating answers)
.le;"ESC-K"       wrap word in _\key{} for "keys" mechanism (see sect.
4.2.5.2)
.le;"ESC-<line feed>"  inserts "_\fresh" (to make following text begin
on a new line)
.els.lm-1

.le;"EXC-X" (gives ":" prompt below the buffer), followed by
"BIND-TO-KEY NAME:#CASE-REGION-LOWER KEY:#ESC-L" will allow one
to convert a group of words to all lower case (useful when gripes
have been submitted in all upper case).  To use this feature,
set the beginning point with "<control>-<space-bar>" or with
"<control>-(shift)@" (depending upon the terminal being used) and
then move the cursor to the desired end point and then use "ESC-L".
(Note: when bound to CASE-REGION-LOWER, "ESC-L" will ^&not\& work on
individual words as it usually does; it will change a large section of
words preceding the current word to lower case if used inadvertently
without setting the beginning and ending points.  USE WITH CAUTION.
.els.lm-1

.tp15.hl3Typesetting Details

Various special characters may be emitted in the "teletype" font with
the following expression: "{_\tt _\char'ooo}", where "ooo" is the
octal value of the ASCII code for the character:

.lm+1.ls0
.le;dollar-sign = _\char'044   (a "_\_$" should also work)
.le;at-sign     = _\char'100   (a "_\_@" should also work)
.le;backslash   = _\char'134
.els.lm-1
Several mathematical symbols are often useful in gripes (use
these only inside math expressions, i.e., bracketed with dollar
signs):

.lm+1.ls0
.le;_\times (multiplied by - a frequently used symbol)
.le;_\mapsto (maps to)
.le;_\rightarrow (converges to or approaches)
.le;_\gg (much greater than)
.le;_\ll (much less than)
.le;_\leq (less than or equal to)
.le;_\geq (greater than or equal to)
.le;_\pm (plus or minus)
.els.lm-1
We need a definition for "_\neq". A definition for the proportionality
symbol used by physicists would be nice too. Note that
"_$512_\times512_$" often looks better as "_$512_^_^2_$".
.s1
Several replacements are nice to execute (perhaps several of them
should be in the "cleanup" macro):
.lm+1.ls0
.le;iterative delete of characters before BS (in "cleanup" but
doesn't work)
.le;query-replace a "NL-NL" with "NL" (option to merge paragraphs).
.els.lm-1

.tp15.hl3Conventions and Features of the TEX Macros

The current macros are in the file "DOCGRIP:GRIPEMAC5.TEX", and
GRTOTEX inserts into the gripes a command to input this file.

.tp15.hl4The "finalrun" Concept

A TEX symbol called "_\finalrun" is defined with value "T" or "F".
The TEX macros for formatting the gripes test this value and
produce different layouts depending on it. For example, the field
which gives the name of the person assigned to answer each gripe is
printed when finalrun is false, but is not printed when it is true.
Also, the date when the answer was prepared is printed before the
answer when false and after it when true. Certain other values are
printed or not depending on _\finalrun.  The value is set at the
beginning of each gripe file by a line of the form:
.lit
        \def\finalrun{F}
.end lit

.tp15.hl4The KEYs Scheme

The EMACS macro package defines "ESC-K" to insert "_\key{_ }" around
the word currently under the cursor. If finalrun is F, a box is drawn
around the word in the output. If it is T, no box is drawn (i.e., the
"key" macro is a do-nothing). We have built a program called GRKEY
to read the gripe files and extract the key strings in order to
prepare a complete cross-reference listing of keywords in all gripes.

.tp15.hl4The SECRET scheme

The "_\secret{_ }" macro is used for programmer comments.  When
_\finalrun is F, the text inside the {_ } is displayed prominently,
but, when _\finalrun is T, it is totally suppressed.  Among matters
for which _\secret is useful are comments from Eric or Don to the
respondent and questions from Nancy regarding typesetting, etc.

.tp15.hl4The CHANGED scheme

The "_\changed" macro is used to indicate that a gripe response has
been altered during the quarter.  Since all GXjjjj.TEX gripes will
be sent to the gripers at the end of the quarter, _\changed is
useful only in the GTnnnn.TEX files, from which only a few of the
gripes will be mailed out in any given quarter.  This macro produces
no output on the printed page.  During the execution of TEX, however,
it produces the message "The following gripe number has had a change
made during this quarter:" on the terminal just ahead of the gripe
page number.  The .LIS file produced by TEX may be printed to make
a "permanent" record of those gripes which were changed.

.tp15.hl2Running TEX on Gripe Files

Here are the commands to run TEX on a gripe file:
.lit

        @DBA0:[TEX.QMS]LOGIN      (if your LOGIN.COM hasn't already)
        TEX gz5                       (process "gz5.tex")
        DVIQMS gz5                    (convert to "BIT" file format)
        LAS gz5.BIT                   (send to the QMS)

.end lit
The DVIQMS command accepts several arguments:
.lm+1.list
.le;DVIQMS gz5/START=1337/PAGES=5     (to print gripes 1337-1341)
.le;DVIQMS gz5/COPIES=2               (2 copies of each gripe)
.s0
This option could be given with /START and/or /PAGES.
.end list.lm-1
If the QMS printer is totally fouled up one can press the RESET button
on its electronics box and then issue the job control command
"INITLAS".  This will reset the machine and reload the default fonts
for TEX.

.tp15.hl2Some Gripe Utility Programs

The source of these programs is in the "AIPPGM" directory and the
subroutine package in GRISUB.FOR is in the "AIPSUB" directory. The
executable images are in the "LOAD" directory and the procedures are
in the "TST" directory.  These programs are not coded in the usual
AIPS standards.

.tp15.hl3Program GRCHEK

This program is used to check a gripe file for format and sequencing.
The format checks are performed by subroutine GETGRI when it reads
the next gripe. GRCHEK itself watches the sequencing and reports any
discrepancies. It also gives a final report on the starting and
ending gripe numbers in the file. Although its original motivation
was just to test the GETGRI subroutine, it has proved to be a useful
program in its own right because it performs a simple but effective
consistency check on the file. To use:
.lit
      RUN LOAD:GRCHEK      it will ask for a file name
      GZ1234               it will pad the name with ".TEX" if
                                 you don't. If the file doesn't
                                 exist it will ask you again.
.end lit

.tp15.hl3Program GRSORT

This program sorts a gripe file into order of ascending gripe number.
Because it uses subroutine GETGRI to read the input file it
automatically also checks the formatting of the gripes (analogous to
GRCHEK). It suppresses redundant copies of gripes which are found
during the sort (they must be EXACTLY identical!). It also has an
option to suppress non-identical duplicate gripe numbers; this is
useful when concatenating files which have been changed.

GRSORT does a simple insertion sort in a big array in memory which has
room for 500 gripes of up to 3000 characters each (these limits are
Fortran-77 parameters in the program).

To execute:
.lit
      RUN LOAD:GRSORT
      GZ1234                  input file name (pads with ".TEX")
      GZ1234                  output file name (must enter!)
      F                       suppress ALL redundant gripes? T or F
.end lit

.tp15.hl3Program GETTBC

This program reads a gripe file and splits it into two files. The
split test is made on a string which the user inputs. Just as for
GRCHEK and GRSORT, the GETGRI subroutine reads the file and performs
a consistency and format check on the input.  The current version only
implements one split string (per execution).  To run it, enter:
.lit
      RUN LOAD:GETTBC
      GZ1234                  input file name (pads with ".TEX")
      GQ1234                  regular output name (no split string)
      GT1234                  "split" output file name
      T                       \finalrun T or F for regular output file
      F                       \finalrun T or F for "split" output file
      \tbc                    split string, nonblank, up to 20 chars
                                 (\changed would also be used)
.end lit

.tp15.hl3Program GRKEY

This program reads one or more gripe files and prepares sorted listing
and TEX files.  GRKEY requests first the "person name for a special
listing" and interprets a blank answer to mean that no TEX output is
desired.  The string "Everyone" causes it to build a TEX file
containing all gripes in the input files sorted first by the person to
whom they have been assigned and secondarily by the _\key strings in
the gripes.  Any other string is taken to restrict the TEX output to
those gripes assigned to the person whose name is given by the string.
Only "to-be-continued" gripes are written to the TEX file.  The basic
listing consists of any errors or semi-anomalous conditions found in
the input files and the sorted list of selected gripes (including both
final and tbc gripes) by person, key and number.  Input flags allow
the user to request additional printed output.  The "complete" list
is a sequential list of all gripes and of gripes separated by category
(final, tbc, tbcnew and changed).  The "All key" list is a list of all
gripes sorted by the key string.  The "site/griper" list is first a
list of all gripes sorted by the string identifying the site at which
the gripe was entered and then a list of all gripes sorted by the
string identifying who entered the gripe.  The user may specify, using
VAX directory and wild-card conventions as needed, which gripe files
are used as input.  The default is "DOCGRIP:GT_%_%_%_%" with
"GX_%_%_%_%" added when no TEX output is requested.
Just as for GRCHEK, GRSORT, and GETTBC, the GETGRI subroutine reads
the file and performs a consistency and format check on the input.
To execute:
.lit
      RUN LOAD:GRKEY
      Everyone                select TEX output (blank => none)
      F                       request "complete" lising (F => no)
      T                       request "All key" listing (T => yes)
      T                       request "site/griper" listing
      DOCGRIP:GT%%%%          input file specification
.end lit

.tp15.hl3Procedures GRCHANGE, GXTBC, GRTBC, GTTEX

     The steps listed in Section 3.3 (GRIPES MANAGEMENT - On a Quarterly
Basis) require a variety of potentially
confusing operations to be performed on files with standard names and
contents.  To reduce the confusion, several procedures have been
written to perform these standard operations.  GRCHANGE is run to
produce TEX copies of changed gripes to be mailed to the gripers.
After the quarter's mailings are complete, GXTBC and GRTBC are run
to rearrange the files.  GTTEX is run to produce an overall index
of gripes and to produce fresh copies of all to-be-continued gripes.
All of the procedures clean up most of their scratch files and
display a directory of any that must remain long enough for the print
jobs to work.

     The procedure GRCHANGE is designed to extract any gripe
containing the _\changed macro and produce a TEX copy of it with
a user-selected value of _\finalrun (having T as a default).  The
procedure assumes that a file GTnnnn.TEX resides in the default
directory and contains some _\changed gripes.  (This can be determined
via a string search with EMACS.)  GRCHANGE produces a variety of
temporary files, but deletes them all (except the .BIT file) before
exiting.  It is invoked by
.lit
                 @TST:GRCHANGE nnnn
.end lit

     The procedure GXTBC is designed to split the current quarter's
GXnnnn.TEX file into new GSnnnn.TEX and GTnnnn.TEx files which will
be stored in the "DOCGRIP" directory via PUTBCK.  It assumes that
GXnnnn.TEX resides in the default directory and that all _\newgripe's
and _\tbcnew's have been converted (via EMACS) into _\tbc's.  GXTBC
runs GETTBC to make a new GSnnnn.TEX file containing completed gripes
and a new GTnnnn.TEX containing ones to be continued.  It runs GRCHEK
on the two output files and is invoked by
.lit
                 @TST:GXTBC nnnn
.end lit
If "_ T" is given after the nnnn above, the procedure will also
make a TEX copy (with _\finalrun{F}) of the new GTnnnn.TEX.  The
various scratch files (except the .BIT plot file) are deleted by
the procedure, but the original GXnnnn.TEX file is left alone.

     The procedure GRTBC is designed to deal with old tbc files
which contain newly-completed gripes.  It assumes that both the
GTnnnn.TEX and the corresponding GSnnnn.TEX files have been checked
out from "DOCGRIP" using CHKOUT and now reside in the default directory.
It extracts all completed gripes from the GT file, concatenates them
with the GS file, resorts the GS file, and runs GRCHEK on the results.
It is invoked by
.lit
                 @TST:GRTBC nnnn
.end lit
If "_ T" is given after the nnnn above, the procedure will also
make a TEX copy (with _\finalrun{F}) of the new GTnnnn.TEX.  The
various scratch files are deleted by the procedure, but the several
versions of the GSnnnn.TEX and GTnnnn.TEX files are not purged.

     The procedure GTTEX is designed to produce sorted index listings
of all gripes and to make new TEX copies of all outstanding gripes
(sorted by respondent, key and number).  It assumes that all gripe
files have been restored to the "DOCGRIP" area.  To make an index
listing of all gripes enter:
.lit
                 @TST:GTTEX
.end lit
which will produce a long terminal session followed by a print to
the QMS laser printer.  To make a new copy of all active gripes,
sorted by respondent, enter
.lit
                 @TST:GTTEX   TEX
.end lit
which will produce all the listings and run TEX, DVIQMS, and LAS
on the sorted gripes.  This procedure deletes its scratch files
but leaves several output files.  A directory listing of these is
shown at the end of the procedure.

.tp15.hl3Subroutines in GRISUB

Subroutine GETGRI is the most important routine in this collection
used in the various programs. Its function is to recognize the next
gripe in the file and deliver it into a big string variable. It does
this by collecting each group of non-blank lines terminated by a blank
line and then checking that they constitute a gripe. In this process
it notes and skips over "_\input", "_\finalrun", and "_\end" commands
and redundant blank lines before the gripe. A valid gripe begins with
"_\count0=" and contains the string "_\gripe". It contains only one
each of "count0" and "gripe". The current version also checks
brackets!

Subroutine WRIGRI writes a gripe (which is a big string variable)
onto the designated output file. Note that GETGRI compresses gripes
into a big string by replacing all newlines with the string "_|_|_|"
and WRIGRI undoes this replacement.

Subroutine PADTEX adds ".TEX" to file names if no file type is
present.

.tp15.hl2Handling the Quarterly Operations

     Every quarter the gripes are run through a sequence of operations
which insure that all new gripe responses are sent to the gripers and
that all gripe respondents are reminded of their outstanding problems.
These operations are to be performed on, or soon after, January 15,
April 15, July 15, and October 15 of each year.  They divide into
three major classes whose detailed steps are listed in the following
subsections.

.tp10.hl3Gripe Preparation and Review

.lm+1.ls
.le;A bit before the magic date, Nancy reminds people to get their
answers in to her.  She uses CHKOUT to get the appropriate GTnnnn.TEX
files and the GXjjjj.TEX file from "DOCGRIP", uses EMACS to enter all
answers which she has received, and uses PUTBCK to return the edited
files to "DOCGRIP".

.le;At, or a bit after, the magic date, and after all answers have
been entered, Nancy uses CHKOUT to check out the current GXjjjj.TEX
file.  With EMACS she substitutes "_\tbcnew" for "_\newgripe" which
changes the wording of the "we have no real answer yet" answer.
Nancy then runs off a TEX copy of the current GXjjjj.TEX (with
_\finalrun{T}) and gives all the TEX outputs to Don.  Then she
uses PUTBCK to put the file back into "DOCGRIP".

.le;Nancy constructs a list of all GTnnnn.TEX files which have been
modified during the quarter.  To do this, she can use EMACS to visit
each of these files (in "DOCGRIP") and simply search for the string
"_\changed".  All operations described below on GTnnnn.TEX files
apply only to those which are found to contain at least one such
string.

.le;Nancy copies the GTnnnn.TEX files to her area (CHKOUT should not
be used).  (A "COPY DOCGRIP:GT_*.TEX _*" will do if it is followed by
a deletion of the unwanted files.)  Using "_@TST:GRCHANGE nnnn" on
each of the GTnnnn.TEX files, she extracts all gripes which have been
modified during the quarter (testing for "_\changed")  and runs off a
TEX copy of each, giving the printed outputs to Don.

.le;Nancy should check that her directory is back to normal at this
point by (1)#running OUTPRT to make sure that she has no files
checked out and then (2)#deleting all GT_*.TEX and GX_*.TEX files in
her area.
.els.lm-1

.tp10.hl3Gripe Correction and Distribution

.lm+1.ls
.le;Don reviews the answers promptly, marking the printout if needed,
and then gives them to Eric who also reviews their contents and
enters appropriate items into the Wishlist file.

.le;Nancy uses CHKOUT to copy any of the GTnnnn.TEX files and the
GXjjjj.TEX file for which Don and/or Eric have indicated changes.
She employs EMACS to make these changes and returns the files to
"DOCGRIP" with PUTBCK.

.le;Nancy copies GXjjjj.TEX from "DOCGRIP" (CHKOUT should not be used)
to her area, makes sure that _\finalrun{T} is at the top of the file, and
then runs it through TEX.

.le;Nancy copies the GTnnnn.TEX files to her area (CHKOUT should not
be used).  (A "COPY DOCGRIP:GT_*.TEX _*" will do if it is followed by
a deletion of the unwanted files.)  Using "_@TST:GRCHANGE nnnn" on
each of the GTnnnn.TEX files, she extracts all gripes which have been
modified during the quarter (testing for "_\changed")  and runs off a
TEX copy of each.

.le;Nancy makes two additional copies of the TEX outputs using the
xerox machine.  One copy is filed in the CV Aips Caige, one is sent
to Pat Moore for the VLA Aips Caige, and one is sent to the griper.

.le;Nancy should check that her directory is back to normal at this
point by (1)#running OUTPRT to make sure that she has no files
checked out and then (2)#deleting all GT_*.TEX and GX_*.TEX files in
her area.
.els.lm-1

.tp10.hl3Gripe File Preparation for the next Quarter

.lm+1.ls
.le;Nancy copies the GXjjjj.TEX file to her area and, with EMACS,
substitutes "_\tbc" for "_\tbcnew".  Then she does "_@TST:GXTBC jjjj"
to strip the file into two files: one named GSjjjj.TEX containing
completed gripes and the other named GTjjjj.TEX containing any still
having _\tbc.  Finally she does "PUTBCK DOCGRIP:GSjjjj.TEX",
"PUTBCK DOCGRIP:GTjjjj.TEX", and "REMOVE DOCGRIP:GXjjjj.TEX" followed
by a "DEL G_*jjjj.TEX;_*" to clean up her directory.

.le;For each for the modified GTnnnn.TEX files she:

.lm+1.ls
.le;Obtains the needed files with "CHKOUT DOCGRIP:GTnnnn.TEX" and
"CHKOUT DOCGRIP:GSnnnn.TEX".

.le;Edits GTnnnn.TEX files to remove all "_\changed" strings.

.le;Does "_@TST:GRTBC nnnn".  This procedure strips out all completed
gripes, concatenates them with the corresponding GSnnnn.TEX file, and
sorts the gripes in the GSnnnn.TEX file into numerical order.  It
also runs GRCHEK on the output files to make sure that nothing bad
has happened.

.le;Puts the changed files back with "PUTBCK DOCGRIP:GSnnnn.TEX" and
"PUTBCK DOCGRIP:GTnnnn.TEX".

.le;Cleans up with "CPURGE DOCGRIP:G_*nnnn.TEX" and "DEL G_*nnnn.TEX".
.els.lm-1

.le;Nancy should check that her directory is back to normal at this
point by (1)#running OUTPRT to make sure that she has no files
checked out and then (2)#deleting all GT_*.TEX and GX_*.TEX files in
her area.

.le;Nancy does "_@TST:GTTEX_ TEX".  This procedure runs all GTnnnn.TEX
(including the new GTjjjj.TEX) through TEX, DVIQMS, and LAS (one copy)
and produces a listing which is an index of all outstanding gripes
(presented in several orders).  This procedure, by calling GRKEY,
sorts the output by the assigned respondent and subject.

.le;Nancy distributes the appropriate TEX output and copies of the
index to all gripe respondents.
.els.lm-1

.tp15.hl1Things we need

This is a list of action items for the improvement of the procedures,
programs, EMACS macros, and TEX macros:
.lm+1.ls
.le;Finish the program to resort WHOGETS.ADR into alphabetical order.
Retrieve mailing addresses of users from WHOGETS by using user number
in gripes?
.le;Fix EMACS to auto-execute and auto-load more.
.le;Write the documentation file MV2C06GR.
.le;The use of GRITP by system managers should be documented.
.le;The "cleanup" macro needs more smarts including compressing
gripe heading and name/date of response.
.le;More smart keys:
.lm+1.ls0"-"
.le;"ESC-P" and "ESC-N" should position on "_\count0" and should set
^&region\& on the current gripe. (May not be desirable - may be tried
on an experimental basis.)
.le;"ESC-G" to emit "text garbled in transmission for unknown reasons".
.els.lm-1
.le;Gripe index program to execute from command language level like
GRTOTEX and GRITP. Better yet: GRTOTEX and GRITP to be ^&tasks\&.
.le;Maybe we need a log file to record handling of the files (when
received, when sent, etc.).
.els.lm-1

