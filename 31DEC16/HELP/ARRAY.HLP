; ARRAY
;---------------------------------------------------------------
;! Declares POPS symbol name and dimensions
;# Pseudoverb POPS
;-----------------------------------------------------------------------
;;  Copyright (C) 1995
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning AIPS should be addressed as follows:
;;         Internet email: aipsmail@nrao.edu.
;;         Postal address: AIPS Project Office
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
;---------------------------------------------------------------
ARRAY     LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
----------------------------------------------------------------
ARRAY
Type:  Pseudoverb
Use:   To create one or more new adverbs as floating point
       arrays and to specify their dimensions.  May be used only
       when typing a procedure.
Grammar:  ARRAY name1 (dim11, ...), name2 (dim21, ...), ...
       where the namei are the new array names and their
       dimensions are given by the dimij.  There is no real
       limit to the number of dimensions for an array.  The
       dimij may be given as a single number, e.g. n, which
       means 1 through n, or they may be given in the form
       n TO m, (or n:m) meaning n through m.
Examples:  ARRAY JUNK1(5), JUNK2(-7 : -3, 4)
           ARRAY CRAZY(19, -1000 TO -987, 5)
       When the arrays are used by POPS, the subscripts are
       always tested to see that they are within range.  The
       data are stored in the canonical Fortran order (i.e.
       the first subscript varies fastest).  Two arrays may
       be equated if the RHS has the same or smaller total
       dimension as the LHS.  For example, JUNK2 = JUNK1 from
       above would set JUNK2(-7,1) through JUNK2(-3,1) to
       the 5 values in JUNK1 and zero the rest of JUNK2.
----------------------------------------------------------------
