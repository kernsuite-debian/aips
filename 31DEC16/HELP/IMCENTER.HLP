; IMCENTER
;-----------------------------------------------------------------------
;! returns pixel position of sub-image centroid
;# Verb Analysis
;-----------------------------------------------------------------------
;;  Copyright (C) 2006
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning AIPS should be addressed as follows:
;;         Internet email: aipsmail@nrao.edu.
;;         Postal address: AIPS Project Office
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
IMCENTER  LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
IMCENTER: Verb to find coordinates of sub-image centroid
INNAME                             Image name (name)
INCLASS                            Image name (class)
INSEQ           0.0      9999.0    Image name (seq. #)
INDISK          0.0         9.0    Disk drive #
BLC            -1.0                Bottom left pixel
TRC             0.0                Top right pixel
FLUX                               Include pixels > FLUX
PRTLEV         -2.0        10.0    <= -1 => no display results
         @      Output adverbs
PIXXY    @                         Fitted (X,Y,...) pixel of
         @                         maximum.
COORDINA @                         Coordinates at pixel
ERROR    @                         > 0 => fit failed, else okay
----------------------------------------------------------------
IMCENTER
Type: Verb
Use:  IMCENTER reads a piece of an image and finds the
      intensity-weighted centroid.
Adverbs: (inputs)
  INNAME......Image name(name).       Standard defaults.
  INCLASS.....Image name(class).      Standard defaults.
  INSEQ.......Image name(seq. #).     0 => highest.
  INDISK......Disk drive # of image.  0 => any.
  BLC.........Bottom left corner.  If BLC = -1,r then do a circle of
              radius r pixels centered on the TRC position
  TRC.........Top right corner or center of circle in pixels
  FLUX........If FLUX > 0, ignore all image values below FLUX.  If
              FLUX < 0, ignore all image values less than -FLUX in
              absolute value.  WARNING: if FLUX is set too low, the
              centroid can be pulled away from the obvious position by
              more than one might first expect.
  PRTLEV......Print level: if <= -1, then do not put result info
              in message file, otherwise do a coordinate display
Adverbs: (outputs)
  PIXXY.......Fitted (X,Y,...) position of centroid
  COORDINA....The X and Y coordinates are found as:
              Xpos = abs(CO(1)) + abs(CO(2))/60 + abs(CO(3))/3600
                 if any of CO(1), CO(2), CO(3) < 0: Xpos = -Xpos
              Ypos = abs(CO(4)) + abs(CO(5))/60 + abs(CO(6))/3600
                 if any of CO(4), CO(5), CO(6) < 0: Ypos = -Ypos
              Note that, although these are most suited to RA, Dec in
              sexagesimal notation, they can be used for any type of
              coordinate.  The units are standard FITS units (e.g
              degrees, m/sec, Hz, sec, etc.) except that right
              ascensions are in hours of time.
  ERROR.......If the verb is not aborted for error, but the fit
              fails (all pixels < FLUX), ERROR will be TRUE (1), else
              it will be FALSE (-1).  Used to detect failures without
              stopping a procedure or RUN file.
----------------------------------------------------------------
