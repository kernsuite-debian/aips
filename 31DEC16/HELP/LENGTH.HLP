; LENGTH
;---------------------------------------------------------------
;! returns length of string to last non-blank character
;# Verb POPS
;-----------------------------------------------------------------------
;;  Copyright (C) 1995
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning AIPS should be addressed as follows:
;;         Internet email: aipsmail@nrao.edu.
;;         Postal address: AIPS Project Office
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
;---------------------------------------------------------------
LENGTH    LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
LENGTH:  Function verb to return actual current length of string
          NO adverbs.  Instead, LENGTH takes one argument
                     LENGTH (string)
          where string is any scalar string.  The character
          position of the last non-blank character in string is
          returned on the stack.  Note: LENGTH ('    ') is 0.
----------------------------------------------------------------
LENGTH
Type:  Verb      (function: leaves results on the stack)
Use:   To obtain the character position of the last non-blank
       character in a string adverb.  LENGTH requires 1
       immediate argument as
                     LENGTH (string)
       where string is any scalar string.  Examples:
            LENGTH ('  ASCAL')    is  7.0.
            SUBSTR (OUTNAME, 1, LENGTH (OUTNAME)) is the
       current OUTNAME string stripped of trailing blanks and
       might be used in a procedure as
            IF LENG(OUTN) <= 8 THEN;
               OUTN = SUBSTR (OUTN, 1, LENG(OUTN)) !! ' CAL'
               END
Adverbs:   none.
----------------------------------------------------------------
