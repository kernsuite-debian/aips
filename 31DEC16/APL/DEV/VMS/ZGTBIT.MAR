      .TITLE ZGTBIT (NBITS, WORD, BITS)
;-----------------------------------------------------------------------
;! get array of bits from a word
;# Z Service
;-----------------------------------------------------------------------
;;  Copyright (C) 1995
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning AIPS should be addressed as follows:
;;         Internet email: aipsmail@nrao.edu.
;;         Postal address: AIPS Project Office
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
;-----------------------------------------------------------------------
;   Get the lowest order "nbits" bits of the bit pattern in "word"
;   and return them in the array BITS with the lsb in bits[0].  For
;   example, if
;   word  = 0 0 0 0 0 1 0 1 ... 0 0 0 1 0 0 1 1
;           ^                                 ^
;          MSB                               LSB
;   and nbits = 3 then bits[0] = 1 , bits[1] = 1 and bits[2] = 0
;   Inputs:
;      NBITS   I      Number of bits
;      WORD    I      Word from which to extract bits
;   Output:
;      BITS    I(*)   Bit array (values 0 or 1)
;   VMS version
;-----------------------------------------------------------------------
        .ENTRY  ZGTBIT,^M<R2,R4>
;
        MOVL    @8(AP),R0    ; R0 <-- WORD
        MOVL    12(AP),R1    ; R1 <-- address of BITS(*)
        MOVL    @4(AP),R2    ; R2 <-- NBITS
        BEQL    GBSLEV       ; If no bits, just leave
GBLOOP:
        MOVL    R0,R4        ; WORD in R4
        BICL    #^XFFFFFFFE,R4   ; Keep only lsb
        MOVL    R4,(R1)+     ; Store it in array
        ROTL    #-1,R0,R0    ; Get the next lsb
        DECL    R2           ; Decrement counter
        BNEQ    GBLOOP       ; Loop again
GBSLEV:
        RET
        .END
