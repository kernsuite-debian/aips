; RDCAL
;---------------------------------------------------------------
;! Computes antenna-based gains based on source model (self-cal)
;# Task AP Calibration
;-----------------------------------------------------------------------
;;  Copyright (C) 1995
;;  Associated Universities, Inc. Washington DC, USA.
;;
;;  This program is free software; you can redistribute it and/or
;;  modify it under the terms of the GNU General Public License as
;;  published by the Free Software Foundation; either version 2 of
;;  the License, or (at your option) any later version.
;;
;;  This program is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public
;;  License along with this program; if not, write to the Free
;;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
;;  MA 02139, USA.
;;
;;  Correspondence concerning AIPS should be addressed as follows:
;;         Internet email: aipsmail@nrao.edu.
;;         Postal address: AIPS Project Office
;;                         National Radio Astronomy Observatory
;;                         520 Edgemont Road
;;                         Charlottesville, VA 22903-2475 USA
;-----------------------------------------------------------------------
;---------------------------------------------------------------
RDCAL     LLLLLLLLLLLLUUUUUUUUUUUU CCCCCCCCCCCCCCCCCCCCCCCCCCCCC
RDCAL     Task to perform self-calibration
INNAME                             Input UV file name (name)
INCLASS                            Input UV file name (class)
INSEQ             0.0     9999.0   Input UV file name (seq. #)
INDISK            0.0        9.0   Input UV file disk unit #
IN2NAME                            Cleaned map name (name)
IN2CLASS                           Cleaned map name (class)
IN2SEQ            0.0     9999.0   Cleaned map name (seq. #)
IN2DISK           0.0        9.0   Cleaned map disk unit #
INVERS            0.0      255.0   CC file version #
NMAPS             0.0       16.0   No. Clean map files
OUTNAME                            Output UV file name (name)
OUTCLASS                           Output UV file name (class)
OUTSEQ           -1.0     9999.0   Output UV file name (seq. #)
OUTDISK           0.0        9.0   Output UV file disk unit #.
NCOMP                              Number of CLEAN components
                                   to use (0 => all)
                                   (1 per field)
                                   ***Self cal parameters
APARM                              1=Minimum; 2=Maximum baseline
                                   3=Wt outside; 4=Ref antenna
                                   5=Min # ant; 6=Print out?
                                   7=Sol type; 8=Avg RR and LL?
                                   9=Sol int.len.; 10=gain norm.
PRTLEV   ?        0.0        2.0   > 0 => display solution parms
         ?                         > 1 => display data too
BPARM                              1=Point source?; 2=Flux den.
                                   3,4=Offset (RA,DEC) in arcsec
                                   5 REDUN wt.;6=REDUN UV size
                                   7=Edit?; 8=# std.dev.to flag
                                   9=# std.dev. to flag an amp.
                                   corr.
DOCAT            -1.0        1.0   Leave cataloged the gain ex-
                                   tension file?
BADDISK           0.0        9.0   Disk numbers to avoid for
                                   scratch files.
----------------------------------------------------------------
RDCAL
Task:  To (self-)calibrate visibility data taking redundant
       baselines into account.  The first input
       file  should contain the uncalibrated UV data sorted in
       time-baseline ('TB') order; the second input file, is
       optionally a CLEAN map (& corresponding CLEAN components)
       obtained from these data; self-cal'd data are written
       into the output file.  If a point source model is
       specified, via BPARMs, (BPARM(1)=1), or if no input model
       is specified (BPARM(1) <0, useful for pure redundancey
       solutio) no CLEAN map is needed. Multiple CLEAN maps may
       be used.  See EXPLAIN RDCAL for details for using RDCAL
       for initial calibration and for a method to use an image
       (such as from VM) as the model.  Supports TELL to ABORt
       and to CHANge the diagnostic print level.
Adverbs:
  INNAME.....Input UV file name (name).    : N.B. Input UV file
  INCLASS....Input UV file name (class).   : must be in time-
  INSEQ......Input UV file name (seq. #).  : baseline (TB) order
  INDISK.....Disk drive # of input UV file.
  IN2NAME....CLEAN map name (name).    Standard defaults.
  IN2CLASS...CLEAN map name (class).   Standard defaults.
  IN2SEQ.....CLEAN map name (seq. #).  Standard defaults.
  IN2DISK....Disk drive # of CLEAN map.  0 => any.
  INVER......CC file version #.  0=> highest numbered version
  NMAPS......Number of image files to use for model.  If more
             than one file is to be used the NAME, CLASS, DISK
             and SEQ of the subsequent image files will be the
             same as the first file except that the LAST two
             characters of the CLASS will be ' 1' thru '15' for
             files number 2 thru 16.  Maximum 16.
  OUTNAME....Output UV file name (name).   Standard defaults.
  OUTCLASS...Output UV file name (class).  Standard defaults.
  OUTSEQ.....Output UV file name (seq. #). 0 => highest unique
  OUTDISK....Disk drive # of output UV file.  0 => highest
             numbered disk with sufficient space
  NCOMP......Number of CLEAN components to use.  0 => all.
             Specify a value for each field
             If NCOMP<0, RDCAL will use up to ABS(NCOMP) compo-
             nents, but stop just prior to the first neg. one.
             Any number of components may now be used.
  APARM......Parameters needed for running task
  APARM(1)...Minimum baseline given full weight (kilolambda)
  APARM(2)...Maximum baseline given full weight (kilolambda)
             0 => infinity
  APARM(3)...Weight for baselines outside range. 0 => 0.05
  APARM(4)...Reference antenna number. 0 => decides on its own
  APARM(5)...Minimum # of ant for a solution
  APARM(6)...0=no print out; 1=more print out
             For TELL: adverb PRTLEV handles this function.
  APARM(7)...Sol type:  1 => Solve for amp. and phase corr.
              (0 => 2)  2 => Solve for phase corrections only
                        3 => Solve for phase, ignoring amp.
               Option 2 is recommended on the first pass.
  APARM(8)...Average RR and LL before solution. 0=>No, 1=>Yes
  APARM(9)...Length of each solution interval in minutes
  APARM(10)..If > 0 and APARM(7) = 1 then the gain
             normalization is turned off, otherwise for
             APARM(7)=1 the gain corrections are scaled by
             the mean modulus of all gains to keep the flux
             density scale from floating.
  BPARM......Additional parameters
  BPARM(1)...0=>Use model with CLEAN map. 1=>Use point source
             -1=>There is no model. This is faster and less
             wierd for pure redundance solution.  Use
             BPARM(5) > 10000.
  BPARM(2)...Flux density (Jy) of point source
  BPARM(3)...East offset of point source (arcsec)
  BPARM(4)...North offset of point source (arcsec)
  BPARM(5)...Relative weight given to information from
             coincident baselines.  If > 10000,
             non-coincident baselines are ignored.
  BPARM(6)...Max. UV separation (in wavelengths) for which
             two baselines are considered coincident.
  BPARM(7)...0=>Don't do any editing.
             1=>Examine the points which were given full
             weight in the gain solutions. Flag those whose
             residuals exceed BPARM(8) times the rms residual.
  BPARM(8)...See BPARM(7).
  BPARM(9)...When APARM(7)=1, calculate the running mean IF
             amplitude correction.  When an IF's amplitude
             correction is > BPARM(9) std. dev.'s discrepant
             from the mean, flag that IF.
             (BPARM(9)=0 => don't perform this check).
  DOCAT......Positive DOCAT requests that the program catalog
             a gain extension file -- this file is needed in
             order to calibrate another data base or to make
             plots using GNPLT.  Nonpositive DOCAT tells the
             program to not bother to leave attached to your
             output file a gain extension file.
  BADDISK....A list of the i.d. numbers of those disks (ten, at
             most) on which scratch files oughtn't to be placed.
----------------------------------------------------------------
RDCAL:  Task designed to (self-) calibrate visibility data,
        given a model of the source. Takes redundant
        baselines into account
DOCUMENTOR:  WaWa, Leiden Observatory
RELATED PROGRAMS:  GNPLT, PRTGA, UVMAP, APCLN, ASCOR, VSCAL,
                   UVSUB, UVSRT, DBCON, MX, VM, ASCAL

                          GENERAL

RDCAL is very similar to ASCAL and I refer
you there for most information.  RDCAL differs from ASCAL as
follows.  In each time interval RDCAL checks whether any
sets of baselines coincide in UV space (rare at the VLA,
common at Westerbork).  For non-coincident baselines, RDCAL
works as ASCAL; it tries to minimize the sums of
(visibility/model - 1)**2 by adjusting the individual
telescope gains.  For coincident, or so called redundant
baselines, RDCAL also tries to minimize the sum over the
coincident baselines of (visibility - <visibility>)**2
where the brackets indicate the average over the coincident
baselines (which should have coincident visibilities). This
process is independent of any input model or clean
components, and can be run without any input model
(BPARM(1)=-1).  The weight given to the coincident badness
of fit relative to the model badness of fit is given by
BPARM(5) as a user parameter.  You might run RDCAL once
with no input model with a large value of BPARM(5), and
then construct a map and re RDCAL with BPARM(5) near unity.
