      SUBROUTINE QUVIN (UV, VIS, WORK, L, G, CX, M, LROW, NS, INCS,
     *   CNT, FLAG)
C-----------------------------------------------------------------------
C! Subroutine call version of VFC routine; replaced by vector version.
C# Obselete
C-----------------------------------------------------------------------
C;  Copyright (C) 1995
C;  Associated Universities, Inc. Washington DC, USA.
C;
C;  This program is free software; you can redistribute it and/or
C;  modify it under the terms of the GNU General Public License as
C;  published by the Free Software Foundation; either version 2 of
C;  the License, or (at your option) any later version.
C;
C;  This program is distributed in the hope that it will be useful,
C;  but WITHOUT ANY WARRANTY; without even the implied warranty of
C;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
C;  GNU General Public License for more details.
C;
C;  You should have received a copy of the GNU General Public
C;  License along with this program; if not, write to the Free
C;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
C;  MA 02139, USA.
C;
C;  Correspondence concerning AIPS should be addressed as follows:
C;         Internet email: aipsmail@nrao.edu.
C;         Postal address: AIPS Project Office
C;                         National Radio Astronomy Observatory
C;                         520 Edgemont Road
C;                         Charlottesville, VA 22903-2475 USA
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
C   Pseudo-AP version
C   Interpolates model visibility values from a grid, corrects the
C   model for the phase of the z*w term and adds the model to the data.
C   Inputs:
C      UV    I  Base address of U,V vector
C      VIS   I  Base address of visibility
C      WORK  I  Base address of work vector length CNT*4 words
C      L     I  Length of visibility record
C      G     I  Base address of grid
C      CX    I  Base address of row interpolation function
C               interpolation fns tabulated every 1/200 cell.
C      M     I  Width of interpolation fn support size,  also
C               the number of rows kept in AP (must be odd)
C      LROW  I  length of a row (V)
C      NS    I  Number of correlators (Stokes' parm.) to process.
C      INCS  I  Increment between correlators.
C      CNT   I  Number of visibility points.
C      FLAG  I  1 => add model, -1 => add i (SQRT(-1)) times
C               model.
C   Also expects necessary constants in following AP locations:
C          0 = U scaling to cells.
C          1 = V scaling to cells
C          2 = DXC = -2 * Pi * delta RA (in cells)
C          3 = DYC = -2 * Pi * delta DEC (cells)
C          4 = DZC = -2 * Pi * delta Z (in radians) for 1st
C              frequency channel.
C          5 = Used as work space.
C          6 = Used as work space.
C          16...16+NS = an array of correlator factors.
C              To subtract the model these should be negative.
C-----------------------------------------------------------------------
      INTEGER   UV, VIS, WORK, L, G, CX, INCS, FLAG, M, LROW, CNT, NS,
     *   UV1, UV2, IWORK1, IWORK2, VVIS, WORK1, VVIS1, CORR, JLOOP,
     *   ZERO, ONE, TWO, THREE, FOUR
      DATA ZERO, ONE, TWO, THREE, FOUR
     *    / 0,    1,   2,    3,     4/
C-----------------------------------------------------------------------
      IF ((CNT.LE.0) .OR. (NS.LE.0)) GO TO 999
C                                       Setup
      UV1 = UV + 1
      UV2 = UV1 + 1
      WORK1 = WORK + 1
      IWORK1 = WORK + 2
      IWORK2 = IWORK1 + 1
      CORR = 16
      VVIS = VIS
      VVIS1 = VIS + 1
C                                       Save u,v
      CALL QCVMOV (UV, L, WORK, FOUR, CNT)
C                                       Scale u,v to cells.
      CALL QVSMUL (UV, L, ZERO, UV, L, CNT)
      CALL QVSMUL (UV1, L, ONE, UV1, L, CNT)
C                                       Shift position (z*w) term.
      CALL QVSMUL (UV2, L, FOUR, IWORK1, FOUR, CNT)
      CALL QVSMA (UV, L, TWO, IWORK1, FOUR, IWORK1, FOUR, CNT)
      CALL QVSMA (UV1, L, THREE, IWORK1, FOUR, IWORK1, FOUR, CNT)
      CALL QVSIN (IWORK1, FOUR, IWORK2, FOUR, CNT)
      CALL QVCOS (IWORK1, FOUR, IWORK1, FOUR, CNT)
C                                       Interpolate from grid.
      CALL QINT (UV, IWORK1, IWORK1, G, CX, M, LROW, L, CNT)
C                                       Model values left in IWORK1
C                                       Restore u,v
      CALL QCVMOV (WORK, FOUR, UV, L, CNT)
C                                       Add model to data.
C                                       Conjugate if necessary.
      IF (FLAG.LE.0)
     *   CALL QCVCON (IWORK1, FOUR, IWORK1, FOUR, CNT)
C                                       Loop over correlators.
      DO 100 JLOOP = 1,NS
C                                       Add component parts.
         CALL QVSMA (IWORK1, FOUR, CORR, VVIS, L, VVIS, L, CNT)
         CALL QVSMA (IWORK2, FOUR, CORR, VVIS1, L, VVIS1, L, CNT)
C                                       Update pointers.
         CORR = CORR + 1
         VVIS = VVIS + INCS
         VVIS1 = VVIS + 1
 100     CONTINUE
C
 999  RETURN
      END
