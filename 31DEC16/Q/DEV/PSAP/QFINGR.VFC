      SUBROUTINE QFINGR (U, ROW, MO2, LROW, TYPE)
C-----------------------------------------------------------------------
C! Subroutine call version of VFC routine; replaced by vector version.
C# Obselete
C-----------------------------------------------------------------------
C;  Copyright (C) 1995
C;  Associated Universities, Inc. Washington DC, USA.
C;
C;  This program is free software; you can redistribute it and/or
C;  modify it under the terms of the GNU General Public License as
C;  published by the Free Software Foundation; either version 2 of
C;  the License, or (at your option) any later version.
C;
C;  This program is distributed in the hope that it will be useful,
C;  but WITHOUT ANY WARRANTY; without even the implied warranty of
C;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
C;  GNU General Public License for more details.
C;
C;  You should have received a copy of the GNU General Public
C;  License along with this program; if not, write to the Free
C;  Software Foundation, Inc., 675 Massachusetts Ave, Cambridge,
C;  MA 02139, USA.
C;
C;  Correspondence concerning AIPS should be addressed as follows:
C;         Internet email: aipsmail@nrao.edu.
C;         Postal address: AIPS Project Office
C;                         National Radio Astronomy Observatory
C;                         520 Edgemont Road
C;                         Charlottesville, VA 22903-2475 USA
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
C   Pseudo-AP version
C   FINGRD Does various tasks associated with completion of gridding
C   a row.  If U is within 1/2 support of 0 the symmetric row is
C   conjugated, flipped and added.  Next two conjugate rows are
C   formed, vis1 + i*vis2 (for beams, vis2 is the sampling function=
C   the sum of the weights).  Finally rows are rotated so that
C   zero column (assumed LROW/2+1) goes to the first column.
C   If U=0 the space for the next row down is used.
C   Inputs:
C      U     I  U in cells (non-negative)
C      ROW   I  Base address of Grid row of interest
C      MO2   I  Half the number of rows kept in the AP.
C      LROW  I  Length of row (no. vis)
C      TYPE  I  1 for IPOL,IBEM maps
C               2 for Q,U maps
C               3 for V maps.
C               4 for two line maps.
C   Also expects necessary constants in following AP locations:
C           0 = COS(PHASE0)           to shift map center
C           1 = SIN(PHASE0)
C           2 = COS(DELPHR)           for rotating down rows
C           3 = SIN(DELPHR)
C           4 = COS(DELPHC)           for rotating down columns
C           5 = SIN(DELPHC)
C           6 = 1.0
C           7 = 0.0
C-----------------------------------------------------------------------
      INTEGER   U, ROW, MO2, LROW, TYPE, ROW2, CROW, CRWI,
     *   SYM, REND, LROW1, CROW2, LL, LROWT4, LROWT2,
     *   MTWO, ZERO, ONE, TWO, FOUR, SIX
      DATA MTWO, ZERO, ONE, TWO, FOUR, SIX
     *   /  -2,    0,   1,   2,    4,   6/
C-----------------------------------------------------------------------
      LROWT2 = LROW + LROW
      LROWT4 = LROWT2 + LROWT2
      LL = LROW
      CROW = ROW + LROWT2
      CROW2 = CROW + 2
      LROW1 = LROW - 1
C                                       For VPOL zero weights
      IF (TYPE.NE.3) GO TO 100
         CRWI = CROW + 1
         CALL QVMOV (CRWI, TWO, CROW, TWO, LROW)
C                                       Check if near origin.
 100  IF (U.GT.MO2) GO TO 300
C                                       Near origin, add symmetric
C                                       points.
         ROW2 = ROW + 2
         SYM = ROW - (LROWT4 * (U + U))
C                                       If U=0 move 0 row 1 slot lower
C                                       and work from there.
         IF (U.GT.0) GO TO 200
            SYM = ROW - LROWT4
            CALL QVMOV (ROW, ONE, SYM, ONE, LROWT4)
 200     REND = SYM + LROWT2 - 2
C                                       First visibility.
         CALL QCVJAD (ROW2, TWO, REND, MTWO, ROW2, TWO, LROW1)
         CALL QCVJAD (ROW, TWO, SYM, TWO, ROW, TWO, ONE)
C                                       Second visibility
         REND = REND + LROWT2
         SYM = SYM + LROWT2
         CALL QCVJAD (CROW2, TWO, REND, MTWO, CROW2, TWO, LROW1)
         CALL QCVJAD (CROW, TWO, SYM, TWO, CROW, TWO, ONE)
C                                       Form conjugate rows.
 300  CALL QGRDMI (ROW, CROW, LROW)
C                                       Rotate zero to first column.
      SYM = CROW + LL
      CALL QVSWAP (CROW, ONE, SYM, ONE, LROW)
      SYM = ROW + LL
      CALL QVSWAP (ROW, ONE, SYM, ONE, LROW)
C                                       Rotate map center.
      CALL QPHSRO (ROW, TWO, ROW, TWO, ZERO, TWO, LROW)
      CALL QVNEG (ONE, TWO, ONE, TWO, TWO)
      CALL QPHSRO (CROW, TWO, CROW, TWO, ZERO, TWO, LROW)
C                                       Reverse Conjugate row.
      CRWI = CROW + 3
      CALL QVRVRS (CROW2, TWO, LROW1)
      CALL QVRVRS (CRWI, TWO, LROW1)
      CALL QVNEG (ONE, TWO, ONE, TWO, TWO)
      CALL QPHSRO (ZERO, TWO, ZERO, TWO, FOUR, SIX, ONE)
C
 999  RETURN
      END
